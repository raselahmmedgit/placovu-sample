:output-dir: query-dsl

[[query-dsl]]
= Query DSL

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/query-dsl.asciidoc. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[partintro]
--
NEST exposes all of the query DSL endpoints available in Elasticsearch

* <<full-text-queries, Full text queries>>

* <<term-level-queries, Term level queries>>

* <<compound-queries, Compound queries>>

* <<joining-queries, Joining queries>>

* <<geo-queries, Geo queries>>

* <<specialized-queries, Specialized queries>>

* <<span-queries, Span queries>>

* <<nest-specific-queries, NEST specific queries>>

See the documentation on <<writing-queries, Writing queries>> for how to use them in NEST.

--

[[full-text-queries]]
== Full text queries 

The high-level full text queries are usually used for running full text queries on full text fields like the body of an email. 
They understand how the field being queried is analyzed and will apply each fieldâ€™s analyzer (or `search_analyzer`) to the query string before executing.

NEST exposes all of the full text queries available in Elasticsearch

:anchor-list: query-dsl/full-text

* <<common-terms-usage,Common Terms Usage>>

* <<match-usage,Match Usage>>

* <<match-phrase-usage,Match Phrase Usage>>

* <<match-phrase-prefix-usage,Match Phrase Prefix Usage>>

* <<multi-match-usage,Multi Match Usage>>

* <<query-string-usage,Query String Usage>>

* <<simple-query-string-usage,Simple Query String Usage>>

See the Elasticsearch documentation on {ref_current}/full-text-queries.html[Full text queries] for more details.

:includes-from-dirs: query-dsl/full-text

include::query-dsl/full-text/common-terms/common-terms-usage.asciidoc[]

include::query-dsl/full-text/match/match-usage.asciidoc[]

include::query-dsl/full-text/match-phrase/match-phrase-usage.asciidoc[]

include::query-dsl/full-text/match-phrase-prefix/match-phrase-prefix-usage.asciidoc[]

include::query-dsl/full-text/multi-match/multi-match-usage.asciidoc[]

include::query-dsl/full-text/query-string/query-string-usage.asciidoc[]

include::query-dsl/full-text/simple-query-string/simple-query-string-usage.asciidoc[]

[[term-level-queries]]
== Term level queries

While the <<full-text-queries, full text queries>> will analyze the query string before executing, the term-level queries operate on the exact terms 
that are stored in the inverted index.

These queries are usually used for structured data like numbers, dates, and enums, rather than full text fields. 
Alternatively, they allow you to craft low-level queries, foregoing the analysis process.

NEST exposes all of the term queries available in Elasticsearch

:anchor-list: query-dsl/term-level

* <<exists-query-usage,Exists Query Usage>>

* <<fuzzy-date-query-usage,Fuzzy Date Query Usage>>

* <<fuzzy-numeric-query-usage,Fuzzy Numeric Query Usage>>

* <<fuzzy-query-usage,Fuzzy Query Usage>>

* <<ids-query-usage,Ids Query Usage>>

* <<prefix-query-usage,Prefix Query Usage>>

* <<date-range-query-usage,Date Range Query Usage>>

* <<numeric-range-query-usage,Numeric Range Query Usage>>

* <<term-range-query-usage,Term Range Query Usage>>

* <<regexp-query-usage,Regexp Query Usage>>

* <<term-query-usage,Term Query Usage>>

* <<terms-list-query-usage,Terms List Query Usage>>

* <<terms-lookup-query-usage,Terms Lookup Query Usage>>

* <<terms-query-usage,Terms Query Usage>>

* <<type-query-usage,Type Query Usage>>

* <<wildcard-query-usage,Wildcard Query Usage>>

See the Elasticsearch documentation on {ref_current}/term-level-queries.html[Term level queries] for more details.

:includes-from-dirs: query-dsl/term-level

include::query-dsl/term-level/exists/exists-query-usage.asciidoc[]

include::query-dsl/term-level/fuzzy/fuzzy-date-query-usage.asciidoc[]

include::query-dsl/term-level/fuzzy/fuzzy-numeric-query-usage.asciidoc[]

include::query-dsl/term-level/fuzzy/fuzzy-query-usage.asciidoc[]

include::query-dsl/term-level/ids/ids-query-usage.asciidoc[]

include::query-dsl/term-level/prefix/prefix-query-usage.asciidoc[]

include::query-dsl/term-level/range/date-range-query-usage.asciidoc[]

include::query-dsl/term-level/range/numeric-range-query-usage.asciidoc[]

include::query-dsl/term-level/range/term-range-query-usage.asciidoc[]

include::query-dsl/term-level/regexp/regexp-query-usage.asciidoc[]

include::query-dsl/term-level/term/term-query-usage.asciidoc[]

include::query-dsl/term-level/terms/terms-list-query-usage.asciidoc[]

include::query-dsl/term-level/terms/terms-lookup-query-usage.asciidoc[]

include::query-dsl/term-level/terms/terms-query-usage.asciidoc[]

include::query-dsl/term-level/type/type-query-usage.asciidoc[]

include::query-dsl/term-level/wildcard/wildcard-query-usage.asciidoc[]

[[compound-queries]]
== Compound queries

Compound queries wrap other compound or leaf queries, either to combine their results and scores, 
to change their behaviour, or to switch from query to filter context.

NEST exposes all of the term queries available in Elasticsearch

:anchor-list: query-dsl/compound

* <<bool-dsl-complex-query-usage,Bool Dsl Complex Query Usage>>

* <<bool-query-usage,Bool Query Usage>>

* <<boosting-query-usage,Boosting Query Usage>>

* <<constant-score-query-usage,Constant Score Query Usage>>

* <<dismax-query-usage,Dismax Query Usage>>

* <<function-score-query-usage,Function Score Query Usage>>

* <<indices-no-match-query-usage,Indices No Match Query Usage>>

* <<indices-query-usage,Indices Query Usage>>

See the Elasticsearch documentation on {ref_current}/compound-queries.html[Compound queries] for more details.

:includes-from-dirs: query-dsl/compound

include::query-dsl/compound/bool/bool-dsl-complex-query-usage.asciidoc[]

include::query-dsl/compound/bool/bool-query-usage.asciidoc[]

include::query-dsl/compound/boosting/boosting-query-usage.asciidoc[]

include::query-dsl/compound/constant-score/constant-score-query-usage.asciidoc[]

include::query-dsl/compound/dismax/dismax-query-usage.asciidoc[]

include::query-dsl/compound/function-score/function-score-query-usage.asciidoc[]

include::query-dsl/compound/indices/indices-no-match-query-usage.asciidoc[]

include::query-dsl/compound/indices/indices-query-usage.asciidoc[]

[[joining-queries]]
== Joining queries

Performing full SQL-style joins in a distributed system like Elasticsearch is prohibitively expensive. 
Instead, Elasticsearch offers two forms of join which are designed to scale horizontally.

:anchor-list: query-dsl/joining

* <<has-child-query-usage,Has Child Query Usage>>

* <<has-parent-query-usage,Has Parent Query Usage>>

* <<nested-query-usage,Nested Query Usage>>

* <<parent-id-query-usage,Parent Id Query Usage>>

See the Elasticsearch documentation on {ref_current}/joining-queries.html[Joining queries] for more details.

:includes-from-dirs: query-dsl/joining

include::query-dsl/joining/has-child/has-child-query-usage.asciidoc[]

include::query-dsl/joining/has-parent/has-parent-query-usage.asciidoc[]

include::query-dsl/joining/nested/nested-query-usage.asciidoc[]

include::query-dsl/joining/parent-id/parent-id-query-usage.asciidoc[]

[[geo-queries]]
== Geo queries

Elasticsearch supports many different types of geospatial queries, operating on {ref_current}/geo-point.html[geo_point] fields 
which support lat/lon pairs, and {ref_current}/geo-shape.html[geo_shape] fields, which support points, lines, circles, polygons, multi-polygons etc.

:anchor-list: query-dsl/geo

* <<geo-bounding-box-query-usage,Geo Bounding Box Query Usage>>

* <<geo-distance-query-usage,Geo Distance Query Usage>>

* <<geo-hash-cell-query-usage,Geo Hash Cell Query Usage>>

* <<geo-polygon-query-usage,Geo Polygon Query Usage>>

* <<geo-shape-circle-query-usage,Geo Shape Circle Query Usage>>

* <<geo-shape-envelope-query-usage,Geo Shape Envelope Query Usage>>

* <<geo-shape-geometry-collection-query-usage,Geo Shape Geometry Collection Query Usage>>

* <<geo-shape-indexed-shape-query-usage,Geo Shape Indexed Shape Query Usage>>

* <<geo-shape-line-string-query-usage,Geo Shape Line String Query Usage>>

* <<geo-shape-multi-line-string-query-usage,Geo Shape Multi Line String Query Usage>>

* <<geo-shape-multi-point-query-usage,Geo Shape Multi Point Query Usage>>

* <<geo-shape-multi-polygon-query-usage,Geo Shape Multi Polygon Query Usage>>

* <<geo-shape-point-query-usage,Geo Shape Point Query Usage>>

* <<geo-shape-polygon-query-usage,Geo Shape Polygon Query Usage>>

See the Elasticsearch documentation on {ref_current}/geo-queries.html[Geo queries] for more details.

:includes-from-dirs: query-dsl/geo

include::query-dsl/geo/bounding-box/geo-bounding-box-query-usage.asciidoc[]

include::query-dsl/geo/distance/geo-distance-query-usage.asciidoc[]

include::query-dsl/geo/hash-cell/geo-hash-cell-query-usage.asciidoc[]

include::query-dsl/geo/polygon/geo-polygon-query-usage.asciidoc[]

include::query-dsl/geo/shape/circle/geo-shape-circle-query-usage.asciidoc[]

include::query-dsl/geo/shape/envelope/geo-shape-envelope-query-usage.asciidoc[]

include::query-dsl/geo/shape/geometry-collection/geo-shape-geometry-collection-query-usage.asciidoc[]

include::query-dsl/geo/shape/indexed-shape/geo-shape-indexed-shape-query-usage.asciidoc[]

include::query-dsl/geo/shape/line-string/geo-shape-line-string-query-usage.asciidoc[]

include::query-dsl/geo/shape/multi-line-string/geo-shape-multi-line-string-query-usage.asciidoc[]

include::query-dsl/geo/shape/multi-point/geo-shape-multi-point-query-usage.asciidoc[]

include::query-dsl/geo/shape/multi-polygon/geo-shape-multi-polygon-query-usage.asciidoc[]

include::query-dsl/geo/shape/point/geo-shape-point-query-usage.asciidoc[]

include::query-dsl/geo/shape/polygon/geo-shape-polygon-query-usage.asciidoc[]

[[specialized-queries]]
== Specialized queries

Specialized types of queries that do not fit into other groups

:anchor-list: query-dsl/specialized

* <<more-like-this-query-usage,More Like This Query Usage>>

* <<percolate-query-usage,Percolate Query Usage>>

* <<script-query-usage,Script Query Usage>>

* <<template-query-usage,Template Query Usage>>

See the Elasticsearch documentation on {ref_current}/specialized-queries.html[Specialized queries] for more details.

:includes-from-dirs: query-dsl/specialized

include::query-dsl/specialized/more-like-this/more-like-this-query-usage.asciidoc[]

include::query-dsl/specialized/percolate/percolate-query-usage.asciidoc[]

include::query-dsl/specialized/script/script-query-usage.asciidoc[]

include::query-dsl/specialized/template/template-query-usage.asciidoc[]

[[span-queries]]
== Span queries

Span queries are low-level positional queries which provide expert control over the order and proximity of the specified terms. 
These are typically used to implement very specific queries on legal documents or patents.

Span queries cannot be mixed with non-span queries (with the exception of the span_multi query).

:anchor-list: query-dsl/span

* <<span-containing-query-usage,Span Containing Query Usage>>

* <<span-field-masking-usage,Span Field Masking Usage>>

* <<span-first-query-usage,Span First Query Usage>>

* <<span-multi-term-query-usage,Span Multi Term Query Usage>>

* <<span-near-query-usage,Span Near Query Usage>>

* <<span-not-query-usage,Span Not Query Usage>>

* <<span-or-query-usage,Span Or Query Usage>>

* <<span-term-query-usage,Span Term Query Usage>>

* <<span-within-query-usage,Span Within Query Usage>>

See the Elasticsearch documentation on {ref_current}/span-queries.html[Span queries] for more details.

:includes-from-dirs: query-dsl/span

include::query-dsl/span/container/span-containing-query-usage.asciidoc[]

include::query-dsl/span/field-masking/span-field-masking-usage.asciidoc[]

include::query-dsl/span/first/span-first-query-usage.asciidoc[]

include::query-dsl/span/multi-term/span-multi-term-query-usage.asciidoc[]

include::query-dsl/span/near/span-near-query-usage.asciidoc[]

include::query-dsl/span/not/span-not-query-usage.asciidoc[]

include::query-dsl/span/or/span-or-query-usage.asciidoc[]

include::query-dsl/span/term/span-term-query-usage.asciidoc[]

include::query-dsl/span/within/span-within-query-usage.asciidoc[]

[[nest-specific-queries]]
== NEST specific queries

These are queries that are specific to NEST that make Elasticsearch easier to work with from a strongly typed .NET language.

:anchor-list: query-dsl/nest-specific

* <<raw-combine-usage,Raw Combine Usage>>

* <<raw-query-usage,Raw Query Usage>>

:includes-from-dirs: query-dsl/nest-specific

include::query-dsl/nest-specific/raw/raw-combine-usage.asciidoc[]

include::query-dsl/nest-specific/raw/raw-query-usage.asciidoc[]

include::{output-dir}/verbatim/verbatim-and-strict-query-usage.asciidoc[]

