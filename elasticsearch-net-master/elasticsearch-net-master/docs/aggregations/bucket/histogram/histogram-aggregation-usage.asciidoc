:ref_current: https://www.elastic.co/guide/en/elasticsearch/reference/master

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Aggregations/Bucket/Histogram/HistogramAggregationUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[histogram-aggregation-usage]]
=== Histogram Aggregation Usage

==== Fluent DSL example

[source,csharp]
----
s => s
.Aggregations(a => a
    .Histogram("commits", h => h
        .Field(p => p.NumberOfCommits)
        .Interval(100)
        .Missing(0)
        .Order(HistogramOrder.KeyDescending)
    )
)
----

==== Object Initializer syntax example

[source,csharp]
----
new SearchRequest<Project>
{
    Aggregations = new HistogramAggregation("commits")
    {
        Field = Field<Project>(p => p.NumberOfCommits),
        Interval = 100,
        Missing = 0,
        Order = HistogramOrder.KeyDescending
    }
}
----

[source,javascript]
.Example json output
----
{
  "aggs": {
    "commits": {
      "histogram": {
        "field": "numberOfCommits",
        "interval": 100.0,
        "missing": 0.0,
        "order": {
          "_key": "desc"
        }
      }
    }
  }
}
----

==== Handling Responses

[source,csharp]
----
response.ShouldBeValid();
var commits = response.Aggs.Histogram("commits");
commits.Should().NotBeNull();
commits.Buckets.Should().NotBeNull();
commits.Buckets.Count.Should().BeGreaterThan(0);
foreach (var item in commits.Buckets)
    item.DocCount.Should().BeGreaterThan(0);
----

