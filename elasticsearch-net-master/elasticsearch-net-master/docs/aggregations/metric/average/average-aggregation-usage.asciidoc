:ref_current: https://www.elastic.co/guide/en/elasticsearch/reference/master

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Aggregations/Metric/Average/AverageAggregationUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[average-aggregation-usage]]
=== Average Aggregation Usage

==== Fluent DSL example

[source,csharp]
----
s => s
.Aggregations(a => a
    .Average("average_commits", avg => avg
        .Meta(m => m
            .Add("foo", "bar")
        )
        .Field(p => p.NumberOfCommits)
        .Missing(10)
        .Script(ss=>ss.Inline("_value * 1.2").Lang("groovy"))
    )
)
----

==== Object Initializer syntax example

[source,csharp]
----
new SearchRequest<Project>
{
    Aggregations = new AverageAggregation("average_commits", Field<Project>(p => p.NumberOfCommits))
    {
        Meta = new Dictionary<string, object>
        {
            { "foo", "bar" }
        },
        Missing = 10,
        Script = new InlineScript("_value * 1.2") { Lang = "groovy" }
    }
}
----

[source,javascript]
.Example json output
----
{
  "aggs": {
    "average_commits": {
      "meta": {
        "foo": "bar"
      },
      "avg": {
        "field": "numberOfCommits",
        "missing": 10.0,
        "script": {
          "inline": "_value * 1.2",
          "lang": "groovy"
        }
      }
    }
  }
}
----

==== Handling Responses

[source,csharp]
----
response.ShouldBeValid();
var commitsAvg = response.Aggs.Average("average_commits");
commitsAvg.Should().NotBeNull();
commitsAvg.Value.Should().BeGreaterThan(0);
commitsAvg.Meta.Should().NotBeNull().And.HaveCount(1);
commitsAvg.Meta["foo"].Should().Be("bar");
----

