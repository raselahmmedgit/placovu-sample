:ref_current: https://www.elastic.co/guide/en/elasticsearch/reference/master

:github: https://github.com/elastic/elasticsearch-net

:nuget: https://www.nuget.org/packages

////
IMPORTANT NOTE
==============
This file has been generated from https://github.com/elastic/elasticsearch-net/tree/master/src/Tests/Search/Request/ScriptFieldsUsageTests.cs. 
If you wish to submit a PR for any spelling mistakes, typos or grammatical errors for this file,
please modify the original csharp file found at the link and submit the PR with that change. Thanks!
////

[[script-fields-usage]]
== Script Fields Usage

Allows to return a script evaluation (based on different fields) for each hit.

Script fields can work on fields that are not stored, and allow to return custom values to 
be returned (the evaluated value of the script).

Script fields can also access the actual `_source` document and extract specific elements to 
be returned from it by using `params['_source']`.

See the Elasticsearch documentation on {ref_current}/search-request-script-fields.html[script fields] 
for more detail.

[float]
=== Fluent DSL example

[source,csharp]
----
s => s
.ScriptFields(sf => sf
    .ScriptField("test1", sc => sc
        .Inline("doc['my_field_name'].value * 2")
        .Lang("groovy")
    )
    .ScriptField("test2", sc => sc
        .Inline("doc['my_field_name'].value * factor")
        .Lang("groovy")
        .Params(p => p
            .Add("factor", 2.0)
        )
    )
)
----

[float]
=== Object Initializer syntax example

[source,csharp]
----
new SearchRequest<Project>
{
    ScriptFields = new ScriptFields
    {
        { "test1", new ScriptField
        {
            Script = new InlineScript("doc['my_field_name'].value * 2") { Lang = "groovy" }
        } },
        { "test2", new InlineScript("doc['my_field_name'].value * factor")
        {
            Lang = "groovy",
            Params = new FluentDictionary<string, object>
            {
                { "factor", 2.0 }
            }
        } }
    }
}
----

[source,javascript]
.Example json output
----
{
  "script_fields": {
    "test1": {
      "script": {
        "inline": "doc['my_field_name'].value * 2",
        "lang": "groovy"
      }
    },
    "test2": {
      "script": {
        "inline": "doc['my_field_name'].value * factor",
        "lang": "groovy",
        "params": {
          "factor": 2.0
        }
      }
    }
  }
}
----

