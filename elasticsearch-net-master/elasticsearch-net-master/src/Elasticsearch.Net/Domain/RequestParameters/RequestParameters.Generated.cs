
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Linq.Expressions;

//This file contains all the typed querystring parameters that are generated of the client spec.
//This file is automatically generated from https://github.com/elastic/elasticsearch/tree/v6.0.0-alpha1/rest-api-spec
//Generated from commit v6.0.0-alpha1

namespace Elasticsearch.Net
{
	
	///<summary>Request parameters descriptor for Bulk
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-bulk.html
	///</pre>
	///</summary>
	public class BulkRequestParameters : FluentRequestParameters<BulkRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Sets the number of shard copies that must be active before proceeding with the bulk operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
		public BulkRequestParameters WaitForActiveShards(string wait_for_active_shards) => this.AddQueryString("wait_for_active_shards", wait_for_active_shards);
		
		
		///<summary>If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
		public BulkRequestParameters Refresh(Refresh refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Specific routing value</summary>
		public BulkRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>Explicit operation timeout</summary>
		public BulkRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Default document type for items which don&#39;t provide one</summary>
		public BulkRequestParameters Type(string type) => this.AddQueryString("type", type);
		
		
		///<summary>Default comma-separated list of fields to return in the response for updates, can be overridden on each sub-request</summary>
		public BulkRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		
		///<summary>True or false to return the _source field or not, or default list of fields to return, can be overridden on each sub-request</summary>
		public BulkRequestParameters SourceEnabled(params string[] source_enabled) => this.AddQueryString("_source", source_enabled);
		
		
		///<summary>Default list of fields to exclude from the returned _source field, can be overridden on each sub-request</summary>
		public BulkRequestParameters SourceExclude(params string[] source_exclude) => this.AddQueryString("_source_exclude", source_exclude);
		
		
		///<summary>Default list of fields to extract and return from the _source field, can be overridden on each sub-request</summary>
		public BulkRequestParameters SourceInclude(params string[] source_include) => this.AddQueryString("_source_include", source_include);
		
		
		///<summary>The pipeline id to preprocess incoming documents with</summary>
		public BulkRequestParameters Pipeline(string pipeline) => this.AddQueryString("pipeline", pipeline);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public BulkRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public BulkRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public BulkRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public BulkRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public BulkRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatAliases
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-alias.html
	///</pre>
	///</summary>
	public class CatAliasesRequestParameters : FluentRequestParameters<CatAliasesRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatAliasesRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatAliasesRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatAliasesRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatAliasesRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatAliasesRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatAliasesRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatAliasesRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatAliasesRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatAliasesRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatAliasesRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatAliasesRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatAliasesRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatAllocation
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-allocation.html
	///</pre>
	///</summary>
	public class CatAllocationRequestParameters : FluentRequestParameters<CatAllocationRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatAllocationRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>The unit in which to display byte values</summary>
		public CatAllocationRequestParameters Bytes(Bytes bytes) => this.AddQueryString("bytes", bytes);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatAllocationRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatAllocationRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatAllocationRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatAllocationRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatAllocationRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatAllocationRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatAllocationRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatAllocationRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatAllocationRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatAllocationRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatAllocationRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatCount
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-count.html
	///</pre>
	///</summary>
	public class CatCountRequestParameters : FluentRequestParameters<CatCountRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatCountRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatCountRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatCountRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatCountRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatCountRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatCountRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatCountRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatCountRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatCountRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatCountRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatCountRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatCountRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatFielddata
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-fielddata.html
	///</pre>
	///</summary>
	public class CatFielddataRequestParameters : FluentRequestParameters<CatFielddataRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatFielddataRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>The unit in which to display byte values</summary>
		public CatFielddataRequestParameters Bytes(Bytes bytes) => this.AddQueryString("bytes", bytes);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatFielddataRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatFielddataRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatFielddataRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatFielddataRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatFielddataRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatFielddataRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>A comma-separated list of fields to return in the output</summary>
		public CatFielddataRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatFielddataRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatFielddataRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatFielddataRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatFielddataRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatFielddataRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatHealth
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-health.html
	///</pre>
	///</summary>
	public class CatHealthRequestParameters : FluentRequestParameters<CatHealthRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatHealthRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatHealthRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatHealthRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatHealthRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatHealthRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatHealthRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Set to false to disable timestamping</summary>
		public CatHealthRequestParameters Ts(bool ts) => this.AddQueryString("ts", ts);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatHealthRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatHealthRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatHealthRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatHealthRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatHealthRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatHealthRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatHelp
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat.html
	///</pre>
	///</summary>
	public class CatHelpRequestParameters : FluentRequestParameters<CatHelpRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Return help information</summary>
		public CatHelpRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatHelpRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatHelpRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatHelpRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatHelpRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatHelpRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatHelpRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatIndices
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-indices.html
	///</pre>
	///</summary>
	public class CatIndicesRequestParameters : FluentRequestParameters<CatIndicesRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatIndicesRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>The unit in which to display byte values</summary>
		public CatIndicesRequestParameters Bytes(Bytes bytes) => this.AddQueryString("bytes", bytes);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatIndicesRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatIndicesRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatIndicesRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>A health status (&quot;green&quot;, &quot;yellow&quot;, or &quot;red&quot; to filter only indices matching the specified health status</summary>
		public CatIndicesRequestParameters Health(Health health) => this.AddQueryString("health", health);
		
		
		///<summary>Return help information</summary>
		public CatIndicesRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Set to true to return stats only for primary shards</summary>
		public CatIndicesRequestParameters Pri(bool pri) => this.AddQueryString("pri", pri);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatIndicesRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatIndicesRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatIndicesRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatIndicesRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatIndicesRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatIndicesRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatIndicesRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatMaster
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-master.html
	///</pre>
	///</summary>
	public class CatMasterRequestParameters : FluentRequestParameters<CatMasterRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatMasterRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatMasterRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatMasterRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatMasterRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatMasterRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatMasterRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatMasterRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatMasterRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatMasterRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatMasterRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatMasterRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatMasterRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatNodeattrs
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodeattrs.html
	///</pre>
	///</summary>
	public class CatNodeAttributesRequestParameters : FluentRequestParameters<CatNodeAttributesRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatNodeAttributesRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatNodeAttributesRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatNodeAttributesRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatNodeAttributesRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatNodeAttributesRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatNodeAttributesRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatNodeAttributesRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatNodeAttributesRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatNodeAttributesRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatNodeAttributesRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatNodeAttributesRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatNodeAttributesRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatNodes
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-nodes.html
	///</pre>
	///</summary>
	public class CatNodesRequestParameters : FluentRequestParameters<CatNodesRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatNodesRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>Return the full node ID instead of the shortened version (default: false)</summary>
		public CatNodesRequestParameters FullId(bool full_id) => this.AddQueryString("full_id", full_id);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatNodesRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatNodesRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatNodesRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatNodesRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatNodesRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatNodesRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatNodesRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatNodesRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatNodesRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatNodesRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatNodesRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatPendingTasks
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-pending-tasks.html
	///</pre>
	///</summary>
	public class CatPendingTasksRequestParameters : FluentRequestParameters<CatPendingTasksRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatPendingTasksRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatPendingTasksRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatPendingTasksRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatPendingTasksRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatPendingTasksRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatPendingTasksRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatPendingTasksRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatPendingTasksRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatPendingTasksRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatPendingTasksRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatPendingTasksRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatPendingTasksRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatPlugins
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-plugins.html
	///</pre>
	///</summary>
	public class CatPluginsRequestParameters : FluentRequestParameters<CatPluginsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatPluginsRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatPluginsRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatPluginsRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatPluginsRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatPluginsRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatPluginsRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatPluginsRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatPluginsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatPluginsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatPluginsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatPluginsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatPluginsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatRecovery
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-recovery.html
	///</pre>
	///</summary>
	public class CatRecoveryRequestParameters : FluentRequestParameters<CatRecoveryRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatRecoveryRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>The unit in which to display byte values</summary>
		public CatRecoveryRequestParameters Bytes(Bytes bytes) => this.AddQueryString("bytes", bytes);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatRecoveryRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatRecoveryRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatRecoveryRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatRecoveryRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatRecoveryRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatRecoveryRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatRecoveryRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatRecoveryRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatRecoveryRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatRecoveryRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatRepositories
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-repositories.html
	///</pre>
	///</summary>
	public class CatRepositoriesRequestParameters : FluentRequestParameters<CatRepositoriesRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatRepositoriesRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>Return local information, do not retrieve the state from master node</summary>
		public CatRepositoriesRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatRepositoriesRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatRepositoriesRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatRepositoriesRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatRepositoriesRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatRepositoriesRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatRepositoriesRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatRepositoriesRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatRepositoriesRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatRepositoriesRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatRepositoriesRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatSegments
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-segments.html
	///</pre>
	///</summary>
	public class CatSegmentsRequestParameters : FluentRequestParameters<CatSegmentsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatSegmentsRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatSegmentsRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatSegmentsRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatSegmentsRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatSegmentsRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatSegmentsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatSegmentsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatSegmentsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatSegmentsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatSegmentsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatShards
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-shards.html
	///</pre>
	///</summary>
	public class CatShardsRequestParameters : FluentRequestParameters<CatShardsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatShardsRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatShardsRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatShardsRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatShardsRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatShardsRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatShardsRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatShardsRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatShardsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatShardsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatShardsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatShardsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatShardsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatSnapshots
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-snapshots.html
	///</pre>
	///</summary>
	public class CatSnapshotsRequestParameters : FluentRequestParameters<CatSnapshotsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatSnapshotsRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>Set to true to ignore unavailable snapshots</summary>
		public CatSnapshotsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatSnapshotsRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatSnapshotsRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatSnapshotsRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatSnapshotsRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatSnapshotsRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatSnapshotsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatSnapshotsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatSnapshotsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatSnapshotsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatSnapshotsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatTasks
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html
	///</pre>
	///</summary>
	public class CatTasksRequestParameters : FluentRequestParameters<CatTasksRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatTasksRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</summary>
		public CatTasksRequestParameters NodeId(params string[] node_id) => this.AddQueryString("node_id", node_id);
		
		
		///<summary>A comma-separated list of actions that should be returned. Leave empty to return all.</summary>
		public CatTasksRequestParameters Actions(params string[] actions) => this.AddQueryString("actions", actions);
		
		
		///<summary>Return detailed task information (default: false)</summary>
		public CatTasksRequestParameters Detailed(bool detailed) => this.AddQueryString("detailed", detailed);
		
		
		///<summary>Return tasks with specified parent node.</summary>
		public CatTasksRequestParameters ParentNode(string parent_node) => this.AddQueryString("parent_node", parent_node);
		
		
		///<summary>Return tasks with specified parent task id. Set to -1 to return all.</summary>
		public CatTasksRequestParameters ParentTask(long parent_task) => this.AddQueryString("parent_task", parent_task);
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatTasksRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatTasksRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatTasksRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatTasksRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatTasksRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatTasksRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatTasksRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatTasksRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatTasksRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatTemplates
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-templates.html
	///</pre>
	///</summary>
	public class CatTemplatesRequestParameters : FluentRequestParameters<CatTemplatesRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatTemplatesRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatTemplatesRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatTemplatesRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatTemplatesRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatTemplatesRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatTemplatesRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatTemplatesRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatTemplatesRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatTemplatesRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatTemplatesRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatTemplatesRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatTemplatesRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for CatThreadPool
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cat-thread-pool.html
	///</pre>
	///</summary>
	public class CatThreadPoolRequestParameters : FluentRequestParameters<CatThreadPoolRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>a short version of the Accept header, e.g. json, yaml</summary>
		public CatThreadPoolRequestParameters Format(string format) => this.AddQueryString("format", format);
		
		
		///<summary>The multiplier in which to display values</summary>
		public CatThreadPoolRequestParameters Size(Size size) => this.AddQueryString("size", size);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public CatThreadPoolRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CatThreadPoolRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Comma-separated list of column names to display</summary>
		public CatThreadPoolRequestParameters H(params string[] h) => this.AddQueryString("h", h);
		
		
		///<summary>Return help information</summary>
		public CatThreadPoolRequestParameters Help(bool help) => this.AddQueryString("help", help);
		
		
		///<summary>Comma-separated list of column names or column aliases to sort by</summary>
		public CatThreadPoolRequestParameters S(params string[] s) => this.AddQueryString("s", s);
		
		
		///<summary>Verbose mode. Display column headers</summary>
		public CatThreadPoolRequestParameters V(bool v) => this.AddQueryString("v", v);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CatThreadPoolRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CatThreadPoolRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CatThreadPoolRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CatThreadPoolRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CatThreadPoolRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ClearScroll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html
	///</pre>
	///</summary>
	public class ClearScrollRequestParameters : FluentRequestParameters<ClearScrollRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ClearScrollRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ClearScrollRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ClearScrollRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ClearScrollRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ClearScrollRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ClusterAllocationExplain
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html
	///</pre>
	///</summary>
	public class ClusterAllocationExplainRequestParameters : FluentRequestParameters<ClusterAllocationExplainRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Return &#39;YES&#39; decisions in explanation (default: false)</summary>
		public ClusterAllocationExplainRequestParameters IncludeYesDecisions(bool include_yes_decisions) => this.AddQueryString("include_yes_decisions", include_yes_decisions);
		
		
		///<summary>Return information about disk usage and shard sizes (default: false)</summary>
		public ClusterAllocationExplainRequestParameters IncludeDiskInfo(bool include_disk_info) => this.AddQueryString("include_disk_info", include_disk_info);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ClusterAllocationExplainRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ClusterAllocationExplainRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ClusterAllocationExplainRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ClusterAllocationExplainRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ClusterAllocationExplainRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ClusterGetSettings
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html
	///</pre>
	///</summary>
	public class ClusterGetSettingsRequestParameters : FluentRequestParameters<ClusterGetSettingsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Return settings in flat format (default: false)</summary>
		public ClusterGetSettingsRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public ClusterGetSettingsRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Explicit operation timeout</summary>
		public ClusterGetSettingsRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Whether to return all default clusters setting.</summary>
		public ClusterGetSettingsRequestParameters IncludeDefaults(bool include_defaults) => this.AddQueryString("include_defaults", include_defaults);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ClusterGetSettingsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ClusterGetSettingsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ClusterGetSettingsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ClusterGetSettingsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ClusterGetSettingsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ClusterHealth
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-health.html
	///</pre>
	///</summary>
	public class ClusterHealthRequestParameters : FluentRequestParameters<ClusterHealthRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Specify the level of detail for returned information</summary>
		public ClusterHealthRequestParameters Level(Level level) => this.AddQueryString("level", level);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public ClusterHealthRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public ClusterHealthRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Explicit operation timeout</summary>
		public ClusterHealthRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Wait until the specified number of shards is active</summary>
		public ClusterHealthRequestParameters WaitForActiveShards(string wait_for_active_shards) => this.AddQueryString("wait_for_active_shards", wait_for_active_shards);
		
		
		///<summary>Wait until the specified number of nodes is available</summary>
		public ClusterHealthRequestParameters WaitForNodes(string wait_for_nodes) => this.AddQueryString("wait_for_nodes", wait_for_nodes);
		
		
		///<summary>Wait until all currently queued events with the given priority are processed</summary>
		public ClusterHealthRequestParameters WaitForEvents(WaitForEvents wait_for_events) => this.AddQueryString("wait_for_events", wait_for_events);
		
		
		///<summary>Whether to wait until there are no relocating shards in the cluster</summary>
		public ClusterHealthRequestParameters WaitForNoRelocatingShards(bool wait_for_no_relocating_shards) => this.AddQueryString("wait_for_no_relocating_shards", wait_for_no_relocating_shards);
		
		
		///<summary>Wait until cluster is in a specific state</summary>
		public ClusterHealthRequestParameters WaitForStatus(WaitForStatus wait_for_status) => this.AddQueryString("wait_for_status", wait_for_status);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ClusterHealthRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ClusterHealthRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ClusterHealthRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ClusterHealthRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ClusterHealthRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ClusterPendingTasks
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-pending.html
	///</pre>
	///</summary>
	public class ClusterPendingTasksRequestParameters : FluentRequestParameters<ClusterPendingTasksRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public ClusterPendingTasksRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Specify timeout for connection to master</summary>
		public ClusterPendingTasksRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ClusterPendingTasksRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ClusterPendingTasksRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ClusterPendingTasksRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ClusterPendingTasksRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ClusterPendingTasksRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ClusterPutSettings
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-update-settings.html
	///</pre>
	///</summary>
	public class ClusterPutSettingsRequestParameters : FluentRequestParameters<ClusterPutSettingsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>Return settings in flat format (default: false)</summary>
		public ClusterPutSettingsRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public ClusterPutSettingsRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Explicit operation timeout</summary>
		public ClusterPutSettingsRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ClusterPutSettingsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ClusterPutSettingsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ClusterPutSettingsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ClusterPutSettingsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ClusterPutSettingsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ClusterReroute
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-reroute.html
	///</pre>
	///</summary>
	public class ClusterRerouteRequestParameters : FluentRequestParameters<ClusterRerouteRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Simulate the operation only and return the resulting state</summary>
		public ClusterRerouteRequestParameters DryRun(bool dry_run) => this.AddQueryString("dry_run", dry_run);
		
		
		///<summary>Return an explanation of why the commands can or cannot be executed</summary>
		public ClusterRerouteRequestParameters Explain(bool explain) => this.AddQueryString("explain", explain);
		
		
		///<summary>Retries allocation of shards that are blocked due to too many subsequent allocation failures</summary>
		public ClusterRerouteRequestParameters RetryFailed(bool retry_failed) => this.AddQueryString("retry_failed", retry_failed);
		
		
		///<summary>Limit the information returned to the specified metrics. Defaults to all but metadata</summary>
		public ClusterRerouteRequestParameters Metric(params string[] metric) => this.AddQueryString("metric", metric);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public ClusterRerouteRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Explicit operation timeout</summary>
		public ClusterRerouteRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ClusterRerouteRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ClusterRerouteRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ClusterRerouteRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ClusterRerouteRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ClusterRerouteRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ClusterState
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-state.html
	///</pre>
	///</summary>
	public class ClusterStateRequestParameters : FluentRequestParameters<ClusterStateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public ClusterStateRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Specify timeout for connection to master</summary>
		public ClusterStateRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Return settings in flat format (default: false)</summary>
		public ClusterStateRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public ClusterStateRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public ClusterStateRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public ClusterStateRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ClusterStateRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ClusterStateRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ClusterStateRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ClusterStateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ClusterStateRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ClusterStats
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-stats.html
	///</pre>
	///</summary>
	public class ClusterStatsRequestParameters : FluentRequestParameters<ClusterStatsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Return settings in flat format (default: false)</summary>
		public ClusterStatsRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		
		///<summary>Explicit operation timeout</summary>
		public ClusterStatsRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ClusterStatsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ClusterStatsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ClusterStatsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ClusterStatsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ClusterStatsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Count
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-count.html
	///</pre>
	///</summary>
	public class CountRequestParameters : FluentRequestParameters<CountRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public CountRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public CountRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public CountRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Include only documents with a specific `_score` value in the result</summary>
		public CountRequestParameters MinScore(double min_score) => this.AddQueryString("min_score", min_score);
		
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public CountRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		
		///<summary>Specific routing value</summary>
		public CountRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>Query in the Lucene query string syntax</summary>
		public CountRequestParameters QueryOnQueryString(string query_on_query_string) => this.AddQueryString("q", query_on_query_string);
		
		
		///<summary>The analyzer to use for the query string</summary>
		public CountRequestParameters Analyzer(string analyzer) => this.AddQueryString("analyzer", analyzer);
		
		
		///<summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
		public CountRequestParameters AnalyzeWildcard(bool analyze_wildcard) => this.AddQueryString("analyze_wildcard", analyze_wildcard);
		
		
		///<summary>The default operator for query string query (AND or OR)</summary>
		public CountRequestParameters DefaultOperator(DefaultOperator default_operator) => this.AddQueryString("default_operator", default_operator);
		
		
		///<summary>The field to use as default where no field prefix is given in the query string</summary>
		public CountRequestParameters Df(string df) => this.AddQueryString("df", df);
		
		
		///<summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
		public CountRequestParameters Lenient(bool lenient) => this.AddQueryString("lenient", lenient);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CountRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CountRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CountRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CountRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CountRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Create
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html
	///</pre>
	///</summary>
	public class CreateRequestParameters : FluentRequestParameters<CreateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
		public CreateRequestParameters WaitForActiveShards(string wait_for_active_shards) => this.AddQueryString("wait_for_active_shards", wait_for_active_shards);
		
		
		///<summary>ID of the parent document</summary>
		public CreateRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		
		///<summary>If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
		public CreateRequestParameters Refresh(Refresh refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Specific routing value</summary>
		public CreateRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>Explicit operation timeout</summary>
		public CreateRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Explicit timestamp for the document</summary>
		public CreateRequestParameters Timestamp(TimeSpan timestamp) => this.AddQueryString("timestamp", timestamp.ToTimeUnit());
		
		
		///<summary>Expiration time for the document</summary>
		public CreateRequestParameters Ttl(TimeSpan ttl) => this.AddQueryString("ttl", ttl.ToTimeUnit());
		
		
		///<summary>Explicit version number for concurrency control</summary>
		public CreateRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		
		///<summary>Specific version type</summary>
		public CreateRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		
		///<summary>The pipeline id to preprocess incoming documents with</summary>
		public CreateRequestParameters Pipeline(string pipeline) => this.AddQueryString("pipeline", pipeline);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CreateRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CreateRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CreateRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CreateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CreateRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Delete
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete.html
	///</pre>
	///</summary>
	public class DeleteRequestParameters : FluentRequestParameters<DeleteRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		
		///<summary>Sets the number of shard copies that must be active before proceeding with the delete operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
		public DeleteRequestParameters WaitForActiveShards(string wait_for_active_shards) => this.AddQueryString("wait_for_active_shards", wait_for_active_shards);
		
		
		///<summary>ID of parent document</summary>
		public DeleteRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		
		///<summary>If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
		public DeleteRequestParameters Refresh(Refresh refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Specific routing value</summary>
		public DeleteRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>Explicit operation timeout</summary>
		public DeleteRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Explicit version number for concurrency control</summary>
		public DeleteRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		
		///<summary>Specific version type</summary>
		public DeleteRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DeleteRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DeleteRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DeleteRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DeleteRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DeleteRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for DeleteByQuery
	///<pre>
	///https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-delete-by-query.html
	///</pre>
	///</summary>
	public class DeleteByQueryRequestParameters : FluentRequestParameters<DeleteByQueryRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>The analyzer to use for the query string</summary>
		public DeleteByQueryRequestParameters Analyzer(string analyzer) => this.AddQueryString("analyzer", analyzer);
		
		
		///<summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
		public DeleteByQueryRequestParameters AnalyzeWildcard(bool analyze_wildcard) => this.AddQueryString("analyze_wildcard", analyze_wildcard);
		
		
		///<summary>The default operator for query string query (AND or OR)</summary>
		public DeleteByQueryRequestParameters DefaultOperator(DefaultOperator default_operator) => this.AddQueryString("default_operator", default_operator);
		
		
		///<summary>The field to use as default where no field prefix is given in the query string</summary>
		public DeleteByQueryRequestParameters Df(string df) => this.AddQueryString("df", df);
		
		
		///<summary>Starting offset (default: 0)</summary>
		public DeleteByQueryRequestParameters From(long from) => this.AddQueryString("from", from);
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public DeleteByQueryRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public DeleteByQueryRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>What to do when the delete-by-query hits version conflicts?</summary>
		public DeleteByQueryRequestParameters Conflicts(Conflicts conflicts) => this.AddQueryString("conflicts", conflicts);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public DeleteByQueryRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
		public DeleteByQueryRequestParameters Lenient(bool lenient) => this.AddQueryString("lenient", lenient);
		
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public DeleteByQueryRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		
		///<summary>Query in the Lucene query string syntax</summary>
		public DeleteByQueryRequestParameters QueryOnQueryString(string query_on_query_string) => this.AddQueryString("q", query_on_query_string);
		
		
		///<summary>A comma-separated list of specific routing values</summary>
		public DeleteByQueryRequestParameters Routing(params string[] routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
		public DeleteByQueryRequestParameters Scroll(TimeSpan scroll) => this.AddQueryString("scroll", scroll.ToTimeUnit());
		
		
		///<summary>Search operation type</summary>
		public DeleteByQueryRequestParameters SearchType(SearchType search_type) => this.AddQueryString("search_type", search_type);
		
		
		///<summary>Explicit timeout for each search request. Defaults to no timeout.</summary>
		public DeleteByQueryRequestParameters SearchTimeout(TimeSpan search_timeout) => this.AddQueryString("search_timeout", search_timeout.ToTimeUnit());
		
		
		///<summary>Number of hits to return (default: 10)</summary>
		public DeleteByQueryRequestParameters Size(long size) => this.AddQueryString("size", size);
		
		
		///<summary>A comma-separated list of &lt;field&gt;:&lt;direction&gt; pairs</summary>
		public DeleteByQueryRequestParameters Sort(params string[] sort) => this.AddQueryString("sort", sort);
		
		
		///<summary>True or false to return the _source field or not, or a list of fields to return</summary>
		public DeleteByQueryRequestParameters SourceEnabled(params string[] source_enabled) => this.AddQueryString("_source", source_enabled);
		
		
		///<summary>A list of fields to exclude from the returned _source field</summary>
		public DeleteByQueryRequestParameters SourceExclude(params string[] source_exclude) => this.AddQueryString("_source_exclude", source_exclude);
		
		
		///<summary>A list of fields to extract and return from the _source field</summary>
		public DeleteByQueryRequestParameters SourceInclude(params string[] source_include) => this.AddQueryString("_source_include", source_include);
		
		
		///<summary>The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.</summary>
		public DeleteByQueryRequestParameters TerminateAfter(long terminate_after) => this.AddQueryString("terminate_after", terminate_after);
		
		
		///<summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
		public DeleteByQueryRequestParameters Stats(params string[] stats) => this.AddQueryString("stats", stats);
		
		
		///<summary>Specify whether to return document version as part of a hit</summary>
		public DeleteByQueryRequestParameters Version(bool version) => this.AddQueryString("version", version);
		
		
		///<summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
		public DeleteByQueryRequestParameters RequestCache(bool request_cache) => this.AddQueryString("request_cache", request_cache);
		
		
		///<summary>Should the effected indexes be refreshed?</summary>
		public DeleteByQueryRequestParameters Refresh(bool refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
		public DeleteByQueryRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Sets the number of shard copies that must be active before proceeding with the delete by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
		public DeleteByQueryRequestParameters WaitForActiveShards(string wait_for_active_shards) => this.AddQueryString("wait_for_active_shards", wait_for_active_shards);
		
		
		///<summary>Size on the scroll request powering the update_by_query</summary>
		public DeleteByQueryRequestParameters ScrollSize(long scroll_size) => this.AddQueryString("scroll_size", scroll_size);
		
		
		///<summary>Should the request should block until the delete-by-query is complete.</summary>
		public DeleteByQueryRequestParameters WaitForCompletion(bool wait_for_completion) => this.AddQueryString("wait_for_completion", wait_for_completion);
		
		
		///<summary>The throttle for this request in sub-requests per second. -1 means no throttle.</summary>
		public DeleteByQueryRequestParameters RequestsPerSecond(long requests_per_second) => this.AddQueryString("requests_per_second", requests_per_second);
		
		
		///<summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn&#39;t sliced into subtasks.</summary>
		public DeleteByQueryRequestParameters Slices(long slices) => this.AddQueryString("slices", slices);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DeleteByQueryRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DeleteByQueryRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DeleteByQueryRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DeleteByQueryRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DeleteByQueryRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for DeleteScript
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html
	///</pre>
	///</summary>
	public class DeleteScriptRequestParameters : FluentRequestParameters<DeleteScriptRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DeleteScriptRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DeleteScriptRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DeleteScriptRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DeleteScriptRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DeleteScriptRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for DeleteTemplate
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html
	///</pre>
	///</summary>
	public class DeleteSearchTemplateRequestParameters : FluentRequestParameters<DeleteSearchTemplateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DeleteSearchTemplateRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DeleteSearchTemplateRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DeleteSearchTemplateRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DeleteSearchTemplateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DeleteSearchTemplateRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Exists
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html
	///</pre>
	///</summary>
	public class DocumentExistsRequestParameters : FluentRequestParameters<DocumentExistsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.HEAD;
		
		///<summary>A comma-separated list of stored fields to return in the response</summary>
		public DocumentExistsRequestParameters StoredFields(params string[] stored_fields) => this.AddQueryString("stored_fields", stored_fields);
		
		
		///<summary>The ID of the parent document</summary>
		public DocumentExistsRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public DocumentExistsRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		
		///<summary>Specify whether to perform the operation in realtime or search mode</summary>
		public DocumentExistsRequestParameters Realtime(bool realtime) => this.AddQueryString("realtime", realtime);
		
		
		///<summary>Refresh the shard containing the document before performing the operation</summary>
		public DocumentExistsRequestParameters Refresh(bool refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Specific routing value</summary>
		public DocumentExistsRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>True or false to return the _source field or not, or a list of fields to return</summary>
		public DocumentExistsRequestParameters SourceEnabled(params string[] source_enabled) => this.AddQueryString("_source", source_enabled);
		
		
		///<summary>A list of fields to exclude from the returned _source field</summary>
		public DocumentExistsRequestParameters SourceExclude(params string[] source_exclude) => this.AddQueryString("_source_exclude", source_exclude);
		
		
		///<summary>A list of fields to extract and return from the _source field</summary>
		public DocumentExistsRequestParameters SourceInclude(params string[] source_include) => this.AddQueryString("_source_include", source_include);
		
		
		///<summary>Explicit version number for concurrency control</summary>
		public DocumentExistsRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		
		///<summary>Specific version type</summary>
		public DocumentExistsRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DocumentExistsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DocumentExistsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DocumentExistsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DocumentExistsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DocumentExistsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ExistsSource
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/5.5/docs-get.html
	///</pre>
	///</summary>
	public class SourceExistsRequestParameters : FluentRequestParameters<SourceExistsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.HEAD;
		
		///<summary>The ID of the parent document</summary>
		public SourceExistsRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public SourceExistsRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		
		///<summary>Specify whether to perform the operation in realtime or search mode</summary>
		public SourceExistsRequestParameters Realtime(bool realtime) => this.AddQueryString("realtime", realtime);
		
		
		///<summary>Refresh the shard containing the document before performing the operation</summary>
		public SourceExistsRequestParameters Refresh(bool refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Specific routing value</summary>
		public SourceExistsRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>True or false to return the _source field or not, or a list of fields to return</summary>
		public SourceExistsRequestParameters SourceEnabled(params string[] source_enabled) => this.AddQueryString("_source", source_enabled);
		
		
		///<summary>A list of fields to exclude from the returned _source field</summary>
		public SourceExistsRequestParameters SourceExclude(params string[] source_exclude) => this.AddQueryString("_source_exclude", source_exclude);
		
		
		///<summary>A list of fields to extract and return from the _source field</summary>
		public SourceExistsRequestParameters SourceInclude(params string[] source_include) => this.AddQueryString("_source_include", source_include);
		
		
		///<summary>Explicit version number for concurrency control</summary>
		public SourceExistsRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		
		///<summary>Specific version type</summary>
		public SourceExistsRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public SourceExistsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public SourceExistsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public SourceExistsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public SourceExistsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public SourceExistsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Explain
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-explain.html
	///</pre>
	///</summary>
	public class ExplainRequestParameters : FluentRequestParameters<ExplainRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)</summary>
		public ExplainRequestParameters AnalyzeWildcard(bool analyze_wildcard) => this.AddQueryString("analyze_wildcard", analyze_wildcard);
		
		
		///<summary>The analyzer for the query string query</summary>
		public ExplainRequestParameters Analyzer(string analyzer) => this.AddQueryString("analyzer", analyzer);
		
		
		///<summary>The default operator for query string query (AND or OR)</summary>
		public ExplainRequestParameters DefaultOperator(DefaultOperator default_operator) => this.AddQueryString("default_operator", default_operator);
		
		
		///<summary>The default field for query string query (default: _all)</summary>
		public ExplainRequestParameters Df(string df) => this.AddQueryString("df", df);
		
		
		///<summary>A comma-separated list of stored fields to return in the response</summary>
		public ExplainRequestParameters StoredFields(params string[] stored_fields) => this.AddQueryString("stored_fields", stored_fields);
		
		
		///<summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
		public ExplainRequestParameters Lenient(bool lenient) => this.AddQueryString("lenient", lenient);
		
		
		///<summary>The ID of the parent document</summary>
		public ExplainRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public ExplainRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		
		///<summary>Query in the Lucene query string syntax</summary>
		public ExplainRequestParameters QueryOnQueryString(string query_on_query_string) => this.AddQueryString("q", query_on_query_string);
		
		
		///<summary>Specific routing value</summary>
		public ExplainRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>True or false to return the _source field or not, or a list of fields to return</summary>
		public ExplainRequestParameters SourceEnabled(params string[] source_enabled) => this.AddQueryString("_source", source_enabled);
		
		
		///<summary>A list of fields to exclude from the returned _source field</summary>
		public ExplainRequestParameters SourceExclude(params string[] source_exclude) => this.AddQueryString("_source_exclude", source_exclude);
		
		
		///<summary>A list of fields to extract and return from the _source field</summary>
		public ExplainRequestParameters SourceInclude(params string[] source_include) => this.AddQueryString("_source_include", source_include);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ExplainRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ExplainRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ExplainRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ExplainRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ExplainRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for FieldCaps
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html
	///</pre>
	///</summary>
	public class FieldCapabilitiesRequestParameters : FluentRequestParameters<FieldCapabilitiesRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>A comma-separated list of field names</summary>
		public FieldCapabilitiesRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public FieldCapabilitiesRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public FieldCapabilitiesRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public FieldCapabilitiesRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public FieldCapabilitiesRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public FieldCapabilitiesRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public FieldCapabilitiesRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public FieldCapabilitiesRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public FieldCapabilitiesRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for FieldStats
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-field-stats.html
	///</pre>
	///</summary>
	public class FieldStatsRequestParameters : FluentRequestParameters<FieldStatsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Defines if field stats should be returned on a per index level or on a cluster wide level</summary>
		public FieldStatsRequestParameters Level(Level level) => this.AddQueryString("level", level);
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public FieldStatsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public FieldStatsRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public FieldStatsRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public FieldStatsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public FieldStatsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public FieldStatsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public FieldStatsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public FieldStatsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Get
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html
	///</pre>
	///</summary>
	public class GetRequestParameters : FluentRequestParameters<GetRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>A comma-separated list of stored fields to return in the response</summary>
		public GetRequestParameters StoredFields(params string[] stored_fields) => this.AddQueryString("stored_fields", stored_fields);
		
		
		///<summary>The ID of the parent document</summary>
		public GetRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public GetRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		
		///<summary>Specify whether to perform the operation in realtime or search mode</summary>
		public GetRequestParameters Realtime(bool realtime) => this.AddQueryString("realtime", realtime);
		
		
		///<summary>Refresh the shard containing the document before performing the operation</summary>
		public GetRequestParameters Refresh(bool refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Specific routing value</summary>
		public GetRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>True or false to return the _source field or not, or a list of fields to return</summary>
		public GetRequestParameters SourceEnabled(params string[] source_enabled) => this.AddQueryString("_source", source_enabled);
		
		
		///<summary>A list of fields to exclude from the returned _source field</summary>
		public GetRequestParameters SourceExclude(params string[] source_exclude) => this.AddQueryString("_source_exclude", source_exclude);
		
		
		///<summary>A list of fields to extract and return from the _source field</summary>
		public GetRequestParameters SourceInclude(params string[] source_include) => this.AddQueryString("_source_include", source_include);
		
		
		///<summary>Explicit version number for concurrency control</summary>
		public GetRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		
		///<summary>Specific version type</summary>
		public GetRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for GetScript
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html
	///</pre>
	///</summary>
	public class GetScriptRequestParameters : FluentRequestParameters<GetScriptRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetScriptRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetScriptRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetScriptRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetScriptRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetScriptRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for GetSource
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-get.html
	///</pre>
	///</summary>
	public class SourceRequestParameters : FluentRequestParameters<SourceRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>The ID of the parent document</summary>
		public SourceRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public SourceRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		
		///<summary>Specify whether to perform the operation in realtime or search mode</summary>
		public SourceRequestParameters Realtime(bool realtime) => this.AddQueryString("realtime", realtime);
		
		
		///<summary>Refresh the shard containing the document before performing the operation</summary>
		public SourceRequestParameters Refresh(bool refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Specific routing value</summary>
		public SourceRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>True or false to return the _source field or not, or a list of fields to return</summary>
		public SourceRequestParameters SourceEnabled(params string[] source_enabled) => this.AddQueryString("_source", source_enabled);
		
		
		///<summary>A list of fields to exclude from the returned _source field</summary>
		public SourceRequestParameters SourceExclude(params string[] source_exclude) => this.AddQueryString("_source_exclude", source_exclude);
		
		
		///<summary>A list of fields to extract and return from the _source field</summary>
		public SourceRequestParameters SourceInclude(params string[] source_include) => this.AddQueryString("_source_include", source_include);
		
		
		///<summary>Explicit version number for concurrency control</summary>
		public SourceRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		
		///<summary>Specific version type</summary>
		public SourceRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public SourceRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public SourceRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public SourceRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public SourceRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public SourceRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for GetTemplate
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html
	///</pre>
	///</summary>
	public class GetSearchTemplateRequestParameters : FluentRequestParameters<GetSearchTemplateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetSearchTemplateRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetSearchTemplateRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetSearchTemplateRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetSearchTemplateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetSearchTemplateRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Index
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html
	///</pre>
	///</summary>
	public class IndexRequestParameters : FluentRequestParameters<IndexRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
		public IndexRequestParameters WaitForActiveShards(string wait_for_active_shards) => this.AddQueryString("wait_for_active_shards", wait_for_active_shards);
		
		
		///<summary>Explicit operation type</summary>
		public IndexRequestParameters OpType(OpType op_type) => this.AddQueryString("op_type", op_type);
		
		
		///<summary>ID of the parent document</summary>
		public IndexRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		
		///<summary>If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
		public IndexRequestParameters Refresh(Refresh refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Specific routing value</summary>
		public IndexRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>Explicit operation timeout</summary>
		public IndexRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Explicit timestamp for the document</summary>
		public IndexRequestParameters Timestamp(TimeSpan timestamp) => this.AddQueryString("timestamp", timestamp.ToTimeUnit());
		
		
		///<summary>Expiration time for the document</summary>
		public IndexRequestParameters Ttl(TimeSpan ttl) => this.AddQueryString("ttl", ttl.ToTimeUnit());
		
		
		///<summary>Explicit version number for concurrency control</summary>
		public IndexRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		
		///<summary>Specific version type</summary>
		public IndexRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		
		///<summary>The pipeline id to preprocess incoming documents with</summary>
		public IndexRequestParameters Pipeline(string pipeline) => this.AddQueryString("pipeline", pipeline);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public IndexRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public IndexRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public IndexRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public IndexRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public IndexRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesAnalyzeForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-analyze.html
	///</pre>
	///</summary>
	public class AnalyzeRequestParameters : FluentRequestParameters<AnalyzeRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>The name of the index to scope the operation</summary>
		public AnalyzeRequestParameters Index(string index) => this.AddQueryString("index", index);
		
		
		///<summary>With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)</summary>
		public AnalyzeRequestParameters PreferLocal(bool prefer_local) => this.AddQueryString("prefer_local", prefer_local);
		
		
		///<summary>Format of the output</summary>
		public AnalyzeRequestParameters Format(Format format) => this.AddQueryString("format", format);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public AnalyzeRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public AnalyzeRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public AnalyzeRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public AnalyzeRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public AnalyzeRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesClearCacheForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-clearcache.html
	///</pre>
	///</summary>
	public class ClearCacheRequestParameters : FluentRequestParameters<ClearCacheRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Clear field data</summary>
		public ClearCacheRequestParameters FieldData(bool field_data) => this.AddQueryString("field_data", field_data);
		
		
		///<summary>A comma-separated list of fields to clear when using the `field_data` parameter (default: all)</summary>
		public ClearCacheRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		
		///<summary>Clear query caches</summary>
		public ClearCacheRequestParameters Query(bool query) => this.AddQueryString("query", query);
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public ClearCacheRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public ClearCacheRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public ClearCacheRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>A comma-separated list of index name to limit the operation</summary>
		public ClearCacheRequestParameters Index(params string[] index) => this.AddQueryString("index", index);
		
		
		///<summary>Clear the recycler cache</summary>
		public ClearCacheRequestParameters Recycler(bool recycler) => this.AddQueryString("recycler", recycler);
		
		
		///<summary>Clear request cache</summary>
		public ClearCacheRequestParameters RequestCache(bool request_cache) => this.AddQueryString("request_cache", request_cache);
		
		
		///<summary>Clear request cache</summary>
		public ClearCacheRequestParameters Request(bool request) => this.AddQueryString("request", request);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ClearCacheRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ClearCacheRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ClearCacheRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ClearCacheRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ClearCacheRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesClose
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html
	///</pre>
	///</summary>
	public class CloseIndexRequestParameters : FluentRequestParameters<CloseIndexRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Explicit operation timeout</summary>
		public CloseIndexRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Specify timeout for connection to master</summary>
		public CloseIndexRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public CloseIndexRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public CloseIndexRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public CloseIndexRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CloseIndexRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CloseIndexRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CloseIndexRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CloseIndexRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CloseIndexRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesCreate
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html
	///</pre>
	///</summary>
	public class CreateIndexRequestParameters : FluentRequestParameters<CreateIndexRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>Set the number of active shards to wait for before the operation returns.</summary>
		public CreateIndexRequestParameters WaitForActiveShards(string wait_for_active_shards) => this.AddQueryString("wait_for_active_shards", wait_for_active_shards);
		
		
		///<summary>Explicit operation timeout</summary>
		public CreateIndexRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Specify timeout for connection to master</summary>
		public CreateIndexRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Whether to update the mapping for all fields with the same name across all types or not</summary>
		public CreateIndexRequestParameters UpdateAllTypes(bool update_all_types) => this.AddQueryString("update_all_types", update_all_types);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CreateIndexRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CreateIndexRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CreateIndexRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CreateIndexRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CreateIndexRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesDelete
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-delete-index.html
	///</pre>
	///</summary>
	public class DeleteIndexRequestParameters : FluentRequestParameters<DeleteIndexRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		
		///<summary>Explicit operation timeout</summary>
		public DeleteIndexRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Specify timeout for connection to master</summary>
		public DeleteIndexRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DeleteIndexRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DeleteIndexRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DeleteIndexRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DeleteIndexRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DeleteIndexRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesDeleteAlias
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html
	///</pre>
	///</summary>
	public class DeleteAliasRequestParameters : FluentRequestParameters<DeleteAliasRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		
		///<summary>Explicit timestamp for the document</summary>
		public DeleteAliasRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Specify timeout for connection to master</summary>
		public DeleteAliasRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DeleteAliasRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DeleteAliasRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DeleteAliasRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DeleteAliasRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DeleteAliasRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesDeleteTemplateForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html
	///</pre>
	///</summary>
	public class DeleteIndexTemplateRequestParameters : FluentRequestParameters<DeleteIndexTemplateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		
		///<summary>Explicit operation timeout</summary>
		public DeleteIndexTemplateRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Specify timeout for connection to master</summary>
		public DeleteIndexTemplateRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DeleteIndexTemplateRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DeleteIndexTemplateRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DeleteIndexTemplateRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DeleteIndexTemplateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DeleteIndexTemplateRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesExists
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-exists.html
	///</pre>
	///</summary>
	public class IndexExistsRequestParameters : FluentRequestParameters<IndexExistsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.HEAD;
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public IndexExistsRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Ignore unavailable indexes (default: false)</summary>
		public IndexExistsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Ignore if a wildcard expression resolves to no concrete indices (default: false)</summary>
		public IndexExistsRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether wildcard expressions should get expanded to open or closed indices (default: open)</summary>
		public IndexExistsRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Return settings in flat format (default: false)</summary>
		public IndexExistsRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		
		///<summary>Whether to return all default setting for each of the indices.</summary>
		public IndexExistsRequestParameters IncludeDefaults(bool include_defaults) => this.AddQueryString("include_defaults", include_defaults);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public IndexExistsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public IndexExistsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public IndexExistsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public IndexExistsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public IndexExistsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesExistsAliasForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html
	///</pre>
	///</summary>
	public class AliasExistsRequestParameters : FluentRequestParameters<AliasExistsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.HEAD;
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public AliasExistsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public AliasExistsRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public AliasExistsRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public AliasExistsRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public AliasExistsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public AliasExistsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public AliasExistsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public AliasExistsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public AliasExistsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesExistsTemplateForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html
	///</pre>
	///</summary>
	public class IndexTemplateExistsRequestParameters : FluentRequestParameters<IndexTemplateExistsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.HEAD;
		
		///<summary>Return settings in flat format (default: false)</summary>
		public IndexTemplateExistsRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public IndexTemplateExistsRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public IndexTemplateExistsRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public IndexTemplateExistsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public IndexTemplateExistsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public IndexTemplateExistsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public IndexTemplateExistsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public IndexTemplateExistsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesExistsType
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-types-exists.html
	///</pre>
	///</summary>
	public class TypeExistsRequestParameters : FluentRequestParameters<TypeExistsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.HEAD;
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public TypeExistsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public TypeExistsRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public TypeExistsRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public TypeExistsRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public TypeExistsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public TypeExistsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public TypeExistsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public TypeExistsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public TypeExistsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesFlushForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-flush.html
	///</pre>
	///</summary>
	public class FlushRequestParameters : FluentRequestParameters<FlushRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)</summary>
		public FlushRequestParameters Force(bool force) => this.AddQueryString("force", force);
		
		
		///<summary>If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is true. If set to false the flush will be skipped iff if another flush operation is already running.</summary>
		public FlushRequestParameters WaitIfOngoing(bool wait_if_ongoing) => this.AddQueryString("wait_if_ongoing", wait_if_ongoing);
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public FlushRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public FlushRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public FlushRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public FlushRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public FlushRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public FlushRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public FlushRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public FlushRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesFlushSyncedForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-synced-flush.html
	///</pre>
	///</summary>
	public class SyncedFlushRequestParameters : FluentRequestParameters<SyncedFlushRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public SyncedFlushRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public SyncedFlushRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public SyncedFlushRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public SyncedFlushRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public SyncedFlushRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public SyncedFlushRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public SyncedFlushRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public SyncedFlushRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesForcemergeForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-forcemerge.html
	///</pre>
	///</summary>
	public class ForceMergeRequestParameters : FluentRequestParameters<ForceMergeRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Specify whether the index should be flushed after performing the operation (default: true)</summary>
		public ForceMergeRequestParameters Flush(bool flush) => this.AddQueryString("flush", flush);
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public ForceMergeRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public ForceMergeRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public ForceMergeRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>The number of segments the index should be merged into (default: dynamic)</summary>
		public ForceMergeRequestParameters MaxNumSegments(long max_num_segments) => this.AddQueryString("max_num_segments", max_num_segments);
		
		
		///<summary>Specify whether the operation should only expunge deleted documents</summary>
		public ForceMergeRequestParameters OnlyExpungeDeletes(bool only_expunge_deletes) => this.AddQueryString("only_expunge_deletes", only_expunge_deletes);
		
		
		///<summary>TODO: ?</summary>
		public ForceMergeRequestParameters OperationThreading(string operation_threading) => this.AddQueryString("operation_threading", operation_threading);
		
		
		///<summary>Specify whether the request should block until the merge process is finished (default: true)</summary>
		public ForceMergeRequestParameters WaitForMerge(bool wait_for_merge) => this.AddQueryString("wait_for_merge", wait_for_merge);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ForceMergeRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ForceMergeRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ForceMergeRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ForceMergeRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ForceMergeRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesGet
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-index.html
	///</pre>
	///</summary>
	public class GetIndexRequestParameters : FluentRequestParameters<GetIndexRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public GetIndexRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Ignore unavailable indexes (default: false)</summary>
		public GetIndexRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Ignore if a wildcard expression resolves to no concrete indices (default: false)</summary>
		public GetIndexRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether wildcard expressions should get expanded to open or closed indices (default: open)</summary>
		public GetIndexRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Return settings in flat format (default: false)</summary>
		public GetIndexRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		
		///<summary>Whether to return all default setting for each of the indices.</summary>
		public GetIndexRequestParameters IncludeDefaults(bool include_defaults) => this.AddQueryString("include_defaults", include_defaults);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetIndexRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetIndexRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetIndexRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetIndexRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetIndexRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesGetAliasForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html
	///</pre>
	///</summary>
	public class GetAliasRequestParameters : FluentRequestParameters<GetAliasRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public GetAliasRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public GetAliasRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public GetAliasRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public GetAliasRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetAliasRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetAliasRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetAliasRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetAliasRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetAliasRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesGetFieldMappingForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-field-mapping.html
	///</pre>
	///</summary>
	public class GetFieldMappingRequestParameters : FluentRequestParameters<GetFieldMappingRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Whether the default mapping values should be returned as well</summary>
		public GetFieldMappingRequestParameters IncludeDefaults(bool include_defaults) => this.AddQueryString("include_defaults", include_defaults);
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public GetFieldMappingRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public GetFieldMappingRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public GetFieldMappingRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public GetFieldMappingRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetFieldMappingRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetFieldMappingRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetFieldMappingRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetFieldMappingRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetFieldMappingRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesGetMappingForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-mapping.html
	///</pre>
	///</summary>
	public class GetMappingRequestParameters : FluentRequestParameters<GetMappingRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public GetMappingRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public GetMappingRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public GetMappingRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public GetMappingRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetMappingRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetMappingRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetMappingRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetMappingRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetMappingRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesGetSettingsForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-get-settings.html
	///</pre>
	///</summary>
	public class GetIndexSettingsRequestParameters : FluentRequestParameters<GetIndexSettingsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public GetIndexSettingsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public GetIndexSettingsRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public GetIndexSettingsRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Return settings in flat format (default: false)</summary>
		public GetIndexSettingsRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public GetIndexSettingsRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Whether to return all default setting for each of the indices.</summary>
		public GetIndexSettingsRequestParameters IncludeDefaults(bool include_defaults) => this.AddQueryString("include_defaults", include_defaults);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetIndexSettingsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetIndexSettingsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetIndexSettingsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetIndexSettingsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetIndexSettingsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesGetTemplateForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html
	///</pre>
	///</summary>
	public class GetIndexTemplateRequestParameters : FluentRequestParameters<GetIndexTemplateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Return settings in flat format (default: false)</summary>
		public GetIndexTemplateRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public GetIndexTemplateRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public GetIndexTemplateRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetIndexTemplateRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetIndexTemplateRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetIndexTemplateRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetIndexTemplateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetIndexTemplateRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesGetUpgradeForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html
	///</pre>
	///</summary>
	public class UpgradeStatusRequestParameters : FluentRequestParameters<UpgradeStatusRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public UpgradeStatusRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public UpgradeStatusRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public UpgradeStatusRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public UpgradeStatusRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public UpgradeStatusRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public UpgradeStatusRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public UpgradeStatusRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public UpgradeStatusRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesOpen
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-open-close.html
	///</pre>
	///</summary>
	public class OpenIndexRequestParameters : FluentRequestParameters<OpenIndexRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Explicit operation timeout</summary>
		public OpenIndexRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Specify timeout for connection to master</summary>
		public OpenIndexRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public OpenIndexRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public OpenIndexRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public OpenIndexRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public OpenIndexRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public OpenIndexRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public OpenIndexRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public OpenIndexRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public OpenIndexRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesPutAlias
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html
	///</pre>
	///</summary>
	public class PutAliasRequestParameters : FluentRequestParameters<PutAliasRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>Explicit timestamp for the document</summary>
		public PutAliasRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Specify timeout for connection to master</summary>
		public PutAliasRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public PutAliasRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public PutAliasRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public PutAliasRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public PutAliasRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public PutAliasRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesPutMapping
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-put-mapping.html
	///</pre>
	///</summary>
	public class PutMappingRequestParameters : FluentRequestParameters<PutMappingRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>Explicit operation timeout</summary>
		public PutMappingRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Specify timeout for connection to master</summary>
		public PutMappingRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public PutMappingRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public PutMappingRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public PutMappingRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Whether to update the mapping for all fields with the same name across all types or not</summary>
		public PutMappingRequestParameters UpdateAllTypes(bool update_all_types) => this.AddQueryString("update_all_types", update_all_types);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public PutMappingRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public PutMappingRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public PutMappingRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public PutMappingRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public PutMappingRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesPutSettingsForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-update-settings.html
	///</pre>
	///</summary>
	public class UpdateIndexSettingsRequestParameters : FluentRequestParameters<UpdateIndexSettingsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>Specify timeout for connection to master</summary>
		public UpdateIndexSettingsRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Whether to update existing settings. If set to `true` existing settings on an index remain unchanged, the default is `false`</summary>
		public UpdateIndexSettingsRequestParameters PreserveExisting(bool preserve_existing) => this.AddQueryString("preserve_existing", preserve_existing);
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public UpdateIndexSettingsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public UpdateIndexSettingsRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public UpdateIndexSettingsRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Return settings in flat format (default: false)</summary>
		public UpdateIndexSettingsRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public UpdateIndexSettingsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public UpdateIndexSettingsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public UpdateIndexSettingsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public UpdateIndexSettingsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public UpdateIndexSettingsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesPutTemplateForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-templates.html
	///</pre>
	///</summary>
	public class PutIndexTemplateRequestParameters : FluentRequestParameters<PutIndexTemplateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>Whether the index template should only be added if new or can also replace an existing one</summary>
		public PutIndexTemplateRequestParameters Create(bool create) => this.AddQueryString("create", create);
		
		
		///<summary>Explicit operation timeout</summary>
		public PutIndexTemplateRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Specify timeout for connection to master</summary>
		public PutIndexTemplateRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Return settings in flat format (default: false)</summary>
		public PutIndexTemplateRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public PutIndexTemplateRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public PutIndexTemplateRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public PutIndexTemplateRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public PutIndexTemplateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public PutIndexTemplateRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesRecoveryForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-recovery.html
	///</pre>
	///</summary>
	public class RecoveryStatusRequestParameters : FluentRequestParameters<RecoveryStatusRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Whether to display detailed information about shard recovery</summary>
		public RecoveryStatusRequestParameters Detailed(bool detailed) => this.AddQueryString("detailed", detailed);
		
		
		///<summary>Display only those recoveries that are currently on-going</summary>
		public RecoveryStatusRequestParameters ActiveOnly(bool active_only) => this.AddQueryString("active_only", active_only);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public RecoveryStatusRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public RecoveryStatusRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public RecoveryStatusRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public RecoveryStatusRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public RecoveryStatusRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesRefreshForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-refresh.html
	///</pre>
	///</summary>
	public class RefreshRequestParameters : FluentRequestParameters<RefreshRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public RefreshRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public RefreshRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public RefreshRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public RefreshRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public RefreshRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public RefreshRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public RefreshRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public RefreshRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
		
		///<summary></summary>
		[Obsolete("Scheduled to be removed in 7.0, calling this is a noop")]
		public RefreshRequestParameters Force(bool force) => this;
		
		
		///<summary></summary>
		[Obsolete("Scheduled to be removed in 7.0, calling this is a noop")]
		public RefreshRequestParameters OperationThreading(string operation_threading) => this;
		
	}
	
	///<summary>Request parameters descriptor for IndicesRolloverForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-rollover-index.html
	///</pre>
	///</summary>
	public class RolloverIndexRequestParameters : FluentRequestParameters<RolloverIndexRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Explicit operation timeout</summary>
		public RolloverIndexRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>If set to true the rollover action will only be validated but not actually performed even if a condition matches. The default is false</summary>
		public RolloverIndexRequestParameters DryRun(bool dry_run) => this.AddQueryString("dry_run", dry_run);
		
		
		///<summary>Specify timeout for connection to master</summary>
		public RolloverIndexRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Set the number of active shards to wait for on the newly created rollover index before the operation returns.</summary>
		public RolloverIndexRequestParameters WaitForActiveShards(string wait_for_active_shards) => this.AddQueryString("wait_for_active_shards", wait_for_active_shards);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public RolloverIndexRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public RolloverIndexRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public RolloverIndexRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public RolloverIndexRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public RolloverIndexRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesSegmentsForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-segments.html
	///</pre>
	///</summary>
	public class SegmentsRequestParameters : FluentRequestParameters<SegmentsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public SegmentsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public SegmentsRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public SegmentsRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>TODO: ?</summary>
		public SegmentsRequestParameters OperationThreading(string operation_threading) => this.AddQueryString("operation_threading", operation_threading);
		
		
		///<summary>Includes detailed memory usage by Lucene.</summary>
		public SegmentsRequestParameters Verbose(bool verbose) => this.AddQueryString("verbose", verbose);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public SegmentsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public SegmentsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public SegmentsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public SegmentsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public SegmentsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesShardStoresForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shards-stores.html
	///</pre>
	///</summary>
	public class IndicesShardStoresRequestParameters : FluentRequestParameters<IndicesShardStoresRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>A comma-separated list of statuses used to filter on shards to get store information for</summary>
		public IndicesShardStoresRequestParameters Status(params string[] status) => this.AddQueryString("status", status);
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public IndicesShardStoresRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public IndicesShardStoresRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public IndicesShardStoresRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>TODO: ?</summary>
		public IndicesShardStoresRequestParameters OperationThreading(string operation_threading) => this.AddQueryString("operation_threading", operation_threading);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public IndicesShardStoresRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public IndicesShardStoresRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public IndicesShardStoresRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public IndicesShardStoresRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public IndicesShardStoresRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesShrink
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-shrink-index.html
	///</pre>
	///</summary>
	public class ShrinkIndexRequestParameters : FluentRequestParameters<ShrinkIndexRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>Explicit operation timeout</summary>
		public ShrinkIndexRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Specify timeout for connection to master</summary>
		public ShrinkIndexRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Set the number of active shards to wait for on the shrunken index before the operation returns.</summary>
		public ShrinkIndexRequestParameters WaitForActiveShards(string wait_for_active_shards) => this.AddQueryString("wait_for_active_shards", wait_for_active_shards);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ShrinkIndexRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ShrinkIndexRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ShrinkIndexRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ShrinkIndexRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ShrinkIndexRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesStatsForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html
	///</pre>
	///</summary>
	public class IndicesStatsRequestParameters : FluentRequestParameters<IndicesStatsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
		public IndicesStatsRequestParameters CompletionFields(params string[] completion_fields) => this.AddQueryString("completion_fields", completion_fields);
		
		
		///<summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
		public IndicesStatsRequestParameters FielddataFields(params string[] fielddata_fields) => this.AddQueryString("fielddata_fields", fielddata_fields);
		
		
		///<summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
		public IndicesStatsRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		
		///<summary>A comma-separated list of search groups for `search` index metric</summary>
		public IndicesStatsRequestParameters Groups(params string[] groups) => this.AddQueryString("groups", groups);
		
		
		///<summary>Return stats aggregated at cluster, index or shard level</summary>
		public IndicesStatsRequestParameters Level(Level level) => this.AddQueryString("level", level);
		
		
		///<summary>Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)</summary>
		public IndicesStatsRequestParameters IncludeSegmentFileSizes(bool include_segment_file_sizes) => this.AddQueryString("include_segment_file_sizes", include_segment_file_sizes);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public IndicesStatsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public IndicesStatsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public IndicesStatsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public IndicesStatsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public IndicesStatsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesUpdateAliasesForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-aliases.html
	///</pre>
	///</summary>
	public class BulkAliasRequestParameters : FluentRequestParameters<BulkAliasRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Request timeout</summary>
		public BulkAliasRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Specify timeout for connection to master</summary>
		public BulkAliasRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public BulkAliasRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public BulkAliasRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public BulkAliasRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public BulkAliasRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public BulkAliasRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesUpgradeForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-upgrade.html
	///</pre>
	///</summary>
	public class UpgradeRequestParameters : FluentRequestParameters<UpgradeRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public UpgradeRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public UpgradeRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public UpgradeRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Specify whether the request should block until the all segments are upgraded (default: false)</summary>
		public UpgradeRequestParameters WaitForCompletion(bool wait_for_completion) => this.AddQueryString("wait_for_completion", wait_for_completion);
		
		
		///<summary>If true, only ancient (an older Lucene major release) segments will be upgraded</summary>
		public UpgradeRequestParameters OnlyAncientSegments(bool only_ancient_segments) => this.AddQueryString("only_ancient_segments", only_ancient_segments);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public UpgradeRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public UpgradeRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public UpgradeRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public UpgradeRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public UpgradeRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IndicesValidateQueryForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-validate.html
	///</pre>
	///</summary>
	public class ValidateQueryRequestParameters : FluentRequestParameters<ValidateQueryRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Return detailed information about the error</summary>
		public ValidateQueryRequestParameters Explain(bool explain) => this.AddQueryString("explain", explain);
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public ValidateQueryRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public ValidateQueryRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public ValidateQueryRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>TODO: ?</summary>
		public ValidateQueryRequestParameters OperationThreading(string operation_threading) => this.AddQueryString("operation_threading", operation_threading);
		
		
		///<summary>Query in the Lucene query string syntax</summary>
		public ValidateQueryRequestParameters QueryOnQueryString(string query_on_query_string) => this.AddQueryString("q", query_on_query_string);
		
		
		///<summary>The analyzer to use for the query string</summary>
		public ValidateQueryRequestParameters Analyzer(string analyzer) => this.AddQueryString("analyzer", analyzer);
		
		
		///<summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
		public ValidateQueryRequestParameters AnalyzeWildcard(bool analyze_wildcard) => this.AddQueryString("analyze_wildcard", analyze_wildcard);
		
		
		///<summary>The default operator for query string query (AND or OR)</summary>
		public ValidateQueryRequestParameters DefaultOperator(DefaultOperator default_operator) => this.AddQueryString("default_operator", default_operator);
		
		
		///<summary>The field to use as default where no field prefix is given in the query string</summary>
		public ValidateQueryRequestParameters Df(string df) => this.AddQueryString("df", df);
		
		
		///<summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
		public ValidateQueryRequestParameters Lenient(bool lenient) => this.AddQueryString("lenient", lenient);
		
		
		///<summary>Provide a more detailed explanation showing the actual Lucene query that will be executed.</summary>
		public ValidateQueryRequestParameters Rewrite(bool rewrite) => this.AddQueryString("rewrite", rewrite);
		
		
		///<summary>Execute validation on all shards instead of one random shard per index</summary>
		public ValidateQueryRequestParameters AllShards(bool all_shards) => this.AddQueryString("all_shards", all_shards);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ValidateQueryRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ValidateQueryRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ValidateQueryRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ValidateQueryRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ValidateQueryRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Info
	///<pre>
	///http://www.elastic.co/guide/
	///</pre>
	///</summary>
	public class RootNodeInfoRequestParameters : FluentRequestParameters<RootNodeInfoRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public RootNodeInfoRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public RootNodeInfoRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public RootNodeInfoRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public RootNodeInfoRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public RootNodeInfoRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IngestDeletePipeline
	///<pre>
	///https://www.elastic.co/guide/en/elasticsearch/plugins/master/ingest.html
	///</pre>
	///</summary>
	public class DeletePipelineRequestParameters : FluentRequestParameters<DeletePipelineRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public DeletePipelineRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Explicit operation timeout</summary>
		public DeletePipelineRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DeletePipelineRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DeletePipelineRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DeletePipelineRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DeletePipelineRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DeletePipelineRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IngestGetPipeline
	///<pre>
	///https://www.elastic.co/guide/en/elasticsearch/plugins/master/ingest.html
	///</pre>
	///</summary>
	public class GetPipelineRequestParameters : FluentRequestParameters<GetPipelineRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public GetPipelineRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetPipelineRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetPipelineRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetPipelineRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetPipelineRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetPipelineRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IngestPutPipeline
	///<pre>
	///https://www.elastic.co/guide/en/elasticsearch/plugins/master/ingest.html
	///</pre>
	///</summary>
	public class PutPipelineRequestParameters : FluentRequestParameters<PutPipelineRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public PutPipelineRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Explicit operation timeout</summary>
		public PutPipelineRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public PutPipelineRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public PutPipelineRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public PutPipelineRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public PutPipelineRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public PutPipelineRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for IngestSimulate
	///<pre>
	///https://www.elastic.co/guide/en/elasticsearch/plugins/master/ingest.html
	///</pre>
	///</summary>
	public class SimulatePipelineRequestParameters : FluentRequestParameters<SimulatePipelineRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Verbose mode. Display data output for each processor in executed pipeline</summary>
		public SimulatePipelineRequestParameters Verbose(bool verbose) => this.AddQueryString("verbose", verbose);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public SimulatePipelineRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public SimulatePipelineRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public SimulatePipelineRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public SimulatePipelineRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public SimulatePipelineRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Mget
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html
	///</pre>
	///</summary>
	public class MultiGetRequestParameters : FluentRequestParameters<MultiGetRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>A comma-separated list of stored fields to return in the response</summary>
		public MultiGetRequestParameters StoredFields(params string[] stored_fields) => this.AddQueryString("stored_fields", stored_fields);
		
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public MultiGetRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		
		///<summary>Specify whether to perform the operation in realtime or search mode</summary>
		public MultiGetRequestParameters Realtime(bool realtime) => this.AddQueryString("realtime", realtime);
		
		
		///<summary>Refresh the shard containing the document before performing the operation</summary>
		public MultiGetRequestParameters Refresh(bool refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Specific routing value</summary>
		public MultiGetRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>True or false to return the _source field or not, or a list of fields to return</summary>
		public MultiGetRequestParameters SourceEnabled(params string[] source_enabled) => this.AddQueryString("_source", source_enabled);
		
		
		///<summary>A list of fields to exclude from the returned _source field</summary>
		public MultiGetRequestParameters SourceExclude(params string[] source_exclude) => this.AddQueryString("_source_exclude", source_exclude);
		
		
		///<summary>A list of fields to extract and return from the _source field</summary>
		public MultiGetRequestParameters SourceInclude(params string[] source_include) => this.AddQueryString("_source_include", source_include);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public MultiGetRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public MultiGetRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public MultiGetRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public MultiGetRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public MultiGetRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Msearch
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-multi-search.html
	///</pre>
	///</summary>
	public class MultiSearchRequestParameters : FluentRequestParameters<MultiSearchRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Search operation type</summary>
		public MultiSearchRequestParameters SearchType(SearchType search_type) => this.AddQueryString("search_type", search_type);
		
		
		///<summary>Controls the maximum number of concurrent searches the multi search api will execute</summary>
		public MultiSearchRequestParameters MaxConcurrentSearches(long max_concurrent_searches) => this.AddQueryString("max_concurrent_searches", max_concurrent_searches);
		
		
		///<summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
		public MultiSearchRequestParameters TypedKeys(bool typed_keys) => this.AddQueryString("typed_keys", typed_keys);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public MultiSearchRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public MultiSearchRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public MultiSearchRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public MultiSearchRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public MultiSearchRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for MsearchTemplate
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html
	///</pre>
	///</summary>
	public class MultiSearchTemplateRequestParameters : FluentRequestParameters<MultiSearchTemplateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Search operation type</summary>
		public MultiSearchTemplateRequestParameters SearchType(SearchType search_type) => this.AddQueryString("search_type", search_type);
		
		
		///<summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
		public MultiSearchTemplateRequestParameters TypedKeys(bool typed_keys) => this.AddQueryString("typed_keys", typed_keys);
		
		
		///<summary>Controls the maximum number of concurrent searches the multi search api will execute</summary>
		public MultiSearchTemplateRequestParameters MaxConcurrentSearches(long max_concurrent_searches) => this.AddQueryString("max_concurrent_searches", max_concurrent_searches);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public MultiSearchTemplateRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public MultiSearchTemplateRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public MultiSearchTemplateRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public MultiSearchTemplateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public MultiSearchTemplateRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Mtermvectors
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-termvectors.html
	///</pre>
	///</summary>
	public class MultiTermVectorsRequestParameters : FluentRequestParameters<MultiTermVectorsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters TermStatistics(bool term_statistics) => this.AddQueryString("term_statistics", term_statistics);
		
		
		///<summary>Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters FieldStatistics(bool field_statistics) => this.AddQueryString("field_statistics", field_statistics);
		
		
		///<summary>A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		
		///<summary>Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters Offsets(bool offsets) => this.AddQueryString("offsets", offsets);
		
		
		///<summary>Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters Positions(bool positions) => this.AddQueryString("positions", positions);
		
		
		///<summary>Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters Payloads(bool payloads) => this.AddQueryString("payloads", payloads);
		
		
		///<summary>Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		
		///<summary>Specific routing value. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>Parent id of documents. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
		public MultiTermVectorsRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		
		///<summary>Specifies if requests are real-time as opposed to near-real-time (default: true).</summary>
		public MultiTermVectorsRequestParameters Realtime(bool realtime) => this.AddQueryString("realtime", realtime);
		
		
		///<summary>Explicit version number for concurrency control</summary>
		public MultiTermVectorsRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		
		///<summary>Specific version type</summary>
		public MultiTermVectorsRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public MultiTermVectorsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public MultiTermVectorsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public MultiTermVectorsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public MultiTermVectorsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public MultiTermVectorsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for NodesHotThreadsForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-hot-threads.html
	///</pre>
	///</summary>
	public class NodesHotThreadsRequestParameters : FluentRequestParameters<NodesHotThreadsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>The interval for the second sampling of threads</summary>
		public NodesHotThreadsRequestParameters Interval(TimeSpan interval) => this.AddQueryString("interval", interval.ToTimeUnit());
		
		
		///<summary>Number of samples of thread stacktrace (default: 10)</summary>
		public NodesHotThreadsRequestParameters Snapshots(long snapshots) => this.AddQueryString("snapshots", snapshots);
		
		
		///<summary>Specify the number of threads to provide information for (default: 3)</summary>
		public NodesHotThreadsRequestParameters Threads(long threads) => this.AddQueryString("threads", threads);
		
		
		///<summary>Don&#39;t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)</summary>
		public NodesHotThreadsRequestParameters IgnoreIdleThreads(bool ignore_idle_threads) => this.AddQueryString("ignore_idle_threads", ignore_idle_threads);
		
		
		///<summary>The type to sample (default: cpu)</summary>
		public NodesHotThreadsRequestParameters ThreadType(ThreadType thread_type) => this.AddQueryString("type", thread_type);
		
		
		///<summary>Explicit operation timeout</summary>
		public NodesHotThreadsRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public NodesHotThreadsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public NodesHotThreadsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public NodesHotThreadsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public NodesHotThreadsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public NodesHotThreadsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for NodesInfoForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-info.html
	///</pre>
	///</summary>
	public class NodesInfoRequestParameters : FluentRequestParameters<NodesInfoRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Return settings in flat format (default: false)</summary>
		public NodesInfoRequestParameters FlatSettings(bool flat_settings) => this.AddQueryString("flat_settings", flat_settings);
		
		
		///<summary>Explicit operation timeout</summary>
		public NodesInfoRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public NodesInfoRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public NodesInfoRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public NodesInfoRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public NodesInfoRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public NodesInfoRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for NodesStatsForAll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-nodes-stats.html
	///</pre>
	///</summary>
	public class NodesStatsRequestParameters : FluentRequestParameters<NodesStatsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
		public NodesStatsRequestParameters CompletionFields(params string[] completion_fields) => this.AddQueryString("completion_fields", completion_fields);
		
		
		///<summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
		public NodesStatsRequestParameters FielddataFields(params string[] fielddata_fields) => this.AddQueryString("fielddata_fields", fielddata_fields);
		
		
		///<summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
		public NodesStatsRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		
		///<summary>A comma-separated list of search groups for `search` index metric</summary>
		public NodesStatsRequestParameters Groups(bool groups) => this.AddQueryString("groups", groups);
		
		
		///<summary>Return indices stats aggregated at index, node or shard level</summary>
		public NodesStatsRequestParameters Level(Level level) => this.AddQueryString("level", level);
		
		
		///<summary>A comma-separated list of document types for the `indexing` index metric</summary>
		public NodesStatsRequestParameters Types(params string[] types) => this.AddQueryString("types", types);
		
		
		///<summary>Explicit operation timeout</summary>
		public NodesStatsRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)</summary>
		public NodesStatsRequestParameters IncludeSegmentFileSizes(bool include_segment_file_sizes) => this.AddQueryString("include_segment_file_sizes", include_segment_file_sizes);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public NodesStatsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public NodesStatsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public NodesStatsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public NodesStatsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public NodesStatsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Ping
	///<pre>
	///http://www.elastic.co/guide/
	///</pre>
	///</summary>
	public class PingRequestParameters : FluentRequestParameters<PingRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.HEAD;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public PingRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public PingRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public PingRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public PingRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public PingRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for PutScript
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-scripting.html
	///</pre>
	///</summary>
	public class PutScriptRequestParameters : FluentRequestParameters<PutScriptRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public PutScriptRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public PutScriptRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public PutScriptRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public PutScriptRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public PutScriptRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for PutTemplate
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-template.html
	///</pre>
	///</summary>
	public class PutSearchTemplateRequestParameters : FluentRequestParameters<PutSearchTemplateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public PutSearchTemplateRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public PutSearchTemplateRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public PutSearchTemplateRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public PutSearchTemplateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public PutSearchTemplateRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Reindex
	///<pre>
	///https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html
	///</pre>
	///</summary>
	public class ReindexOnServerRequestParameters : FluentRequestParameters<ReindexOnServerRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Should the effected indexes be refreshed?</summary>
		public ReindexOnServerRequestParameters Refresh(bool refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
		public ReindexOnServerRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Sets the number of shard copies that must be active before proceeding with the reindex operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
		public ReindexOnServerRequestParameters WaitForActiveShards(string wait_for_active_shards) => this.AddQueryString("wait_for_active_shards", wait_for_active_shards);
		
		
		///<summary>Should the request should block until the reindex is complete.</summary>
		public ReindexOnServerRequestParameters WaitForCompletion(bool wait_for_completion) => this.AddQueryString("wait_for_completion", wait_for_completion);
		
		
		///<summary>The throttle to set on this request in sub-requests per second. -1 means no throttle.</summary>
		public ReindexOnServerRequestParameters RequestsPerSecond(long requests_per_second) => this.AddQueryString("requests_per_second", requests_per_second);
		
		
		///<summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn&#39;t sliced into subtasks.</summary>
		public ReindexOnServerRequestParameters Slices(long slices) => this.AddQueryString("slices", slices);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ReindexOnServerRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ReindexOnServerRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ReindexOnServerRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ReindexOnServerRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for ReindexRethrottle
	///<pre>
	///https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-reindex.html
	///</pre>
	///</summary>
	public class ReindexRethrottleRequestParameters : FluentRequestParameters<ReindexRethrottleRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.</summary>
		public ReindexRethrottleRequestParameters RequestsPerSecond(long requests_per_second) => this.AddQueryString("requests_per_second", requests_per_second);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ReindexRethrottleRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ReindexRethrottleRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ReindexRethrottleRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ReindexRethrottleRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ReindexRethrottleRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for RemoteInfo
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/5.5/cluster-remote-info.html
	///</pre>
	///</summary>
	public class RemoteInfoRequestParameters : FluentRequestParameters<RemoteInfoRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public RemoteInfoRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public RemoteInfoRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public RemoteInfoRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public RemoteInfoRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public RemoteInfoRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for RenderSearchTemplate
	///<pre>
	///http://www.elasticsearch.org/guide/en/elasticsearch/reference/master/search-template.html
	///</pre>
	///</summary>
	public class RenderSearchTemplateRequestParameters : FluentRequestParameters<RenderSearchTemplateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public RenderSearchTemplateRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public RenderSearchTemplateRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public RenderSearchTemplateRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public RenderSearchTemplateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public RenderSearchTemplateRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Scroll
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-request-scroll.html
	///</pre>
	///</summary>
	public class ScrollRequestParameters : FluentRequestParameters<ScrollRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ScrollRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ScrollRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ScrollRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ScrollRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ScrollRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Search
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-search.html
	///</pre>
	///</summary>
	public class SearchRequestParameters : FluentRequestParameters<SearchRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>The analyzer to use for the query string</summary>
		public SearchRequestParameters Analyzer(string analyzer) => this.AddQueryString("analyzer", analyzer);
		
		
		///<summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
		public SearchRequestParameters AnalyzeWildcard(bool analyze_wildcard) => this.AddQueryString("analyze_wildcard", analyze_wildcard);
		
		
		///<summary>The default operator for query string query (AND or OR)</summary>
		public SearchRequestParameters DefaultOperator(DefaultOperator default_operator) => this.AddQueryString("default_operator", default_operator);
		
		
		///<summary>The field to use as default where no field prefix is given in the query string</summary>
		public SearchRequestParameters Df(string df) => this.AddQueryString("df", df);
		
		
		///<summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
		public SearchRequestParameters DocvalueFields(params string[] docvalue_fields) => this.AddQueryString("docvalue_fields", docvalue_fields);
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public SearchRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public SearchRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public SearchRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
		public SearchRequestParameters Lenient(bool lenient) => this.AddQueryString("lenient", lenient);
		
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public SearchRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		
		///<summary>A comma-separated list of specific routing values</summary>
		public SearchRequestParameters Routing(params string[] routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
		public SearchRequestParameters Scroll(TimeSpan scroll) => this.AddQueryString("scroll", scroll.ToTimeUnit());
		
		
		///<summary>Search operation type</summary>
		public SearchRequestParameters SearchType(SearchType search_type) => this.AddQueryString("search_type", search_type);
		
		
		///<summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
		public SearchRequestParameters Stats(params string[] stats) => this.AddQueryString("stats", stats);
		
		
		///<summary>Specify which field to use for suggestions</summary>
		public SearchRequestParameters SuggestField(string suggest_field) => this.AddQueryString("suggest_field", suggest_field);
		
		
		///<summary>Specify suggest mode</summary>
		public SearchRequestParameters SuggestMode(SuggestMode suggest_mode) => this.AddQueryString("suggest_mode", suggest_mode);
		
		
		///<summary>How many suggestions to return in response</summary>
		public SearchRequestParameters SuggestSize(long suggest_size) => this.AddQueryString("suggest_size", suggest_size);
		
		
		///<summary>The source text for which the suggestions should be returned</summary>
		public SearchRequestParameters SuggestText(string suggest_text) => this.AddQueryString("suggest_text", suggest_text);
		
		
		///<summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
		public SearchRequestParameters TypedKeys(bool typed_keys) => this.AddQueryString("typed_keys", typed_keys);
		
		
		///<summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
		public SearchRequestParameters RequestCache(bool request_cache) => this.AddQueryString("request_cache", request_cache);
		
		
		///<summary>The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large.</summary>
		public SearchRequestParameters BatchedReduceSize(long batched_reduce_size) => this.AddQueryString("batched_reduce_size", batched_reduce_size);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public SearchRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public SearchRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public SearchRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public SearchRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SearchShards
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/search-shards.html
	///</pre>
	///</summary>
	public class SearchShardsRequestParameters : FluentRequestParameters<SearchShardsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public SearchShardsRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		
		///<summary>Specific routing value</summary>
		public SearchShardsRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public SearchShardsRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public SearchShardsRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public SearchShardsRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public SearchShardsRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public SearchShardsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public SearchShardsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public SearchShardsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public SearchShardsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public SearchShardsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SearchTemplate
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html
	///</pre>
	///</summary>
	public class SearchTemplateRequestParameters : FluentRequestParameters<SearchTemplateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public SearchTemplateRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public SearchTemplateRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public SearchTemplateRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public SearchTemplateRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		
		///<summary>A comma-separated list of specific routing values</summary>
		public SearchTemplateRequestParameters Routing(params string[] routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
		public SearchTemplateRequestParameters Scroll(TimeSpan scroll) => this.AddQueryString("scroll", scroll.ToTimeUnit());
		
		
		///<summary>Search operation type</summary>
		public SearchTemplateRequestParameters SearchType(SearchType search_type) => this.AddQueryString("search_type", search_type);
		
		
		///<summary>Specify whether to return detailed information about score computation as part of a hit</summary>
		public SearchTemplateRequestParameters Explain(bool explain) => this.AddQueryString("explain", explain);
		
		
		///<summary>Specify whether to profile the query execution</summary>
		public SearchTemplateRequestParameters Profile(bool profile) => this.AddQueryString("profile", profile);
		
		
		///<summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
		public SearchTemplateRequestParameters TypedKeys(bool typed_keys) => this.AddQueryString("typed_keys", typed_keys);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public SearchTemplateRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public SearchTemplateRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public SearchTemplateRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public SearchTemplateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public SearchTemplateRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotCreate
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class SnapshotRequestParameters : FluentRequestParameters<SnapshotRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public SnapshotRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Should this request wait until the operation has completed before returning</summary>
		public SnapshotRequestParameters WaitForCompletion(bool wait_for_completion) => this.AddQueryString("wait_for_completion", wait_for_completion);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public SnapshotRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public SnapshotRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public SnapshotRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public SnapshotRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public SnapshotRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotCreateRepository
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class CreateRepositoryRequestParameters : FluentRequestParameters<CreateRepositoryRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public CreateRepositoryRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Explicit operation timeout</summary>
		public CreateRepositoryRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Whether to verify the repository after creation</summary>
		public CreateRepositoryRequestParameters Verify(bool verify) => this.AddQueryString("verify", verify);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CreateRepositoryRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CreateRepositoryRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CreateRepositoryRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CreateRepositoryRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CreateRepositoryRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotDelete
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class DeleteSnapshotRequestParameters : FluentRequestParameters<DeleteSnapshotRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public DeleteSnapshotRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DeleteSnapshotRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DeleteSnapshotRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DeleteSnapshotRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DeleteSnapshotRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DeleteSnapshotRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotDeleteRepository
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class DeleteRepositoryRequestParameters : FluentRequestParameters<DeleteRepositoryRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public DeleteRepositoryRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Explicit operation timeout</summary>
		public DeleteRepositoryRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DeleteRepositoryRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DeleteRepositoryRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DeleteRepositoryRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DeleteRepositoryRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DeleteRepositoryRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotGet
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class GetSnapshotRequestParameters : FluentRequestParameters<GetSnapshotRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public GetSnapshotRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown</summary>
		public GetSnapshotRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to show verbose snapshot info or only show the basic info found in the repository index blob</summary>
		public GetSnapshotRequestParameters Verbose(bool verbose) => this.AddQueryString("verbose", verbose);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetSnapshotRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetSnapshotRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetSnapshotRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetSnapshotRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetSnapshotRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotGetRepository
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class GetRepositoryRequestParameters : FluentRequestParameters<GetRepositoryRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public GetRepositoryRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public GetRepositoryRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetRepositoryRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetRepositoryRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetRepositoryRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetRepositoryRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetRepositoryRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotRestore
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class RestoreRequestParameters : FluentRequestParameters<RestoreRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public RestoreRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Should this request wait until the operation has completed before returning</summary>
		public RestoreRequestParameters WaitForCompletion(bool wait_for_completion) => this.AddQueryString("wait_for_completion", wait_for_completion);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public RestoreRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public RestoreRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public RestoreRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public RestoreRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public RestoreRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotStatus
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class SnapshotStatusRequestParameters : FluentRequestParameters<SnapshotStatusRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public SnapshotStatusRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown</summary>
		public SnapshotStatusRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public SnapshotStatusRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public SnapshotStatusRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public SnapshotStatusRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public SnapshotStatusRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public SnapshotStatusRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for SnapshotVerifyRepository
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/modules-snapshots.html
	///</pre>
	///</summary>
	public class VerifyRepositoryRequestParameters : FluentRequestParameters<VerifyRepositoryRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public VerifyRepositoryRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Explicit operation timeout</summary>
		public VerifyRepositoryRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public VerifyRepositoryRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public VerifyRepositoryRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public VerifyRepositoryRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public VerifyRepositoryRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public VerifyRepositoryRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for TasksCancel
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html
	///</pre>
	///</summary>
	public class CancelTasksRequestParameters : FluentRequestParameters<CancelTasksRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</summary>
		public CancelTasksRequestParameters NodeId(params string[] node_id) => this.AddQueryString("node_id", node_id);
		
		
		///<summary>A comma-separated list of actions that should be cancelled. Leave empty to cancel all.</summary>
		public CancelTasksRequestParameters Actions(params string[] actions) => this.AddQueryString("actions", actions);
		
		
		///<summary>Cancel tasks with specified parent node.</summary>
		public CancelTasksRequestParameters ParentNode(string parent_node) => this.AddQueryString("parent_node", parent_node);
		
		
		///<summary>Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all.</summary>
		public CancelTasksRequestParameters ParentTask(string parent_task) => this.AddQueryString("parent_task", parent_task);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public CancelTasksRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public CancelTasksRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public CancelTasksRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public CancelTasksRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public CancelTasksRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for TasksGet
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html
	///</pre>
	///</summary>
	public class GetTaskRequestParameters : FluentRequestParameters<GetTaskRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Wait for the matching tasks to complete (default: false)</summary>
		public GetTaskRequestParameters WaitForCompletion(bool wait_for_completion) => this.AddQueryString("wait_for_completion", wait_for_completion);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetTaskRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetTaskRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetTaskRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetTaskRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetTaskRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for TasksList
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/tasks.html
	///</pre>
	///</summary>
	public class ListTasksRequestParameters : FluentRequestParameters<ListTasksRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</summary>
		public ListTasksRequestParameters NodeId(params string[] node_id) => this.AddQueryString("node_id", node_id);
		
		
		///<summary>A comma-separated list of actions that should be returned. Leave empty to return all.</summary>
		public ListTasksRequestParameters Actions(params string[] actions) => this.AddQueryString("actions", actions);
		
		
		///<summary>Return detailed task information (default: false)</summary>
		public ListTasksRequestParameters Detailed(bool detailed) => this.AddQueryString("detailed", detailed);
		
		
		///<summary>Return tasks with specified parent node.</summary>
		public ListTasksRequestParameters ParentNode(string parent_node) => this.AddQueryString("parent_node", parent_node);
		
		
		///<summary>Return tasks with specified parent task id (node_id:task_number). Set to -1 to return all.</summary>
		public ListTasksRequestParameters ParentTask(string parent_task) => this.AddQueryString("parent_task", parent_task);
		
		
		///<summary>Wait for the matching tasks to complete (default: false)</summary>
		public ListTasksRequestParameters WaitForCompletion(bool wait_for_completion) => this.AddQueryString("wait_for_completion", wait_for_completion);
		
		
		///<summary>Group tasks by nodes or parent/child relationships</summary>
		public ListTasksRequestParameters GroupBy(GroupBy group_by) => this.AddQueryString("group_by", group_by);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ListTasksRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ListTasksRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ListTasksRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ListTasksRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ListTasksRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Termvectors
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-termvectors.html
	///</pre>
	///</summary>
	public class TermVectorsRequestParameters : FluentRequestParameters<TermVectorsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Specifies if total term frequency and document frequency should be returned.</summary>
		public TermVectorsRequestParameters TermStatistics(bool term_statistics) => this.AddQueryString("term_statistics", term_statistics);
		
		
		///<summary>Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.</summary>
		public TermVectorsRequestParameters FieldStatistics(bool field_statistics) => this.AddQueryString("field_statistics", field_statistics);
		
		
		///<summary>A comma-separated list of fields to return.</summary>
		public TermVectorsRequestParameters Fields(params string[] fields) => this.AddQueryString("fields", fields);
		
		
		///<summary>Specifies if term offsets should be returned.</summary>
		public TermVectorsRequestParameters Offsets(bool offsets) => this.AddQueryString("offsets", offsets);
		
		
		///<summary>Specifies if term positions should be returned.</summary>
		public TermVectorsRequestParameters Positions(bool positions) => this.AddQueryString("positions", positions);
		
		
		///<summary>Specifies if term payloads should be returned.</summary>
		public TermVectorsRequestParameters Payloads(bool payloads) => this.AddQueryString("payloads", payloads);
		
		
		///<summary>Specify the node or shard the operation should be performed on (default: random).</summary>
		public TermVectorsRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		
		///<summary>Specific routing value.</summary>
		public TermVectorsRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>Parent id of documents.</summary>
		public TermVectorsRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		
		///<summary>Specifies if request is real-time as opposed to near-real-time (default: true).</summary>
		public TermVectorsRequestParameters Realtime(bool realtime) => this.AddQueryString("realtime", realtime);
		
		
		///<summary>Explicit version number for concurrency control</summary>
		public TermVectorsRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		
		///<summary>Specific version type</summary>
		public TermVectorsRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public TermVectorsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public TermVectorsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public TermVectorsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public TermVectorsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public TermVectorsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for Update
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update.html
	///</pre>
	///</summary>
	public class UpdateRequestParameters : FluentRequestParameters<UpdateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Sets the number of shard copies that must be active before proceeding with the update operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
		public UpdateRequestParameters WaitForActiveShards(string wait_for_active_shards) => this.AddQueryString("wait_for_active_shards", wait_for_active_shards);
		
		
		///<summary>True or false to return the _source field or not, or a list of fields to return</summary>
		public UpdateRequestParameters SourceEnabled(params string[] source_enabled) => this.AddQueryString("_source", source_enabled);
		
		
		///<summary>The script language (default: painless)</summary>
		public UpdateRequestParameters Lang(string lang) => this.AddQueryString("lang", lang);
		
		
		///<summary>ID of the parent document. Is is only used for routing and when for the upsert request</summary>
		public UpdateRequestParameters Parent(string parent) => this.AddQueryString("parent", parent);
		
		
		///<summary>If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
		public UpdateRequestParameters Refresh(Refresh refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Specify how many times should the operation be retried when a conflict occurs (default: 0)</summary>
		public UpdateRequestParameters RetryOnConflict(long retry_on_conflict) => this.AddQueryString("retry_on_conflict", retry_on_conflict);
		
		
		///<summary>Specific routing value</summary>
		public UpdateRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>Explicit operation timeout</summary>
		public UpdateRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Explicit timestamp for the document</summary>
		public UpdateRequestParameters Timestamp(TimeSpan timestamp) => this.AddQueryString("timestamp", timestamp.ToTimeUnit());
		
		
		///<summary>Expiration time for the document</summary>
		public UpdateRequestParameters Ttl(TimeSpan ttl) => this.AddQueryString("ttl", ttl.ToTimeUnit());
		
		
		///<summary>Explicit version number for concurrency control</summary>
		public UpdateRequestParameters Version(long version) => this.AddQueryString("version", version);
		
		
		///<summary>Specific version type</summary>
		public UpdateRequestParameters VersionType(VersionType version_type) => this.AddQueryString("version_type", version_type);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public UpdateRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public UpdateRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public UpdateRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public UpdateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public UpdateRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for UpdateByQuery
	///<pre>
	///https://www.elastic.co/guide/en/elasticsearch/reference/master/docs-update-by-query.html
	///</pre>
	///</summary>
	public class UpdateByQueryRequestParameters : FluentRequestParameters<UpdateByQueryRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>The analyzer to use for the query string</summary>
		public UpdateByQueryRequestParameters Analyzer(string analyzer) => this.AddQueryString("analyzer", analyzer);
		
		
		///<summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
		public UpdateByQueryRequestParameters AnalyzeWildcard(bool analyze_wildcard) => this.AddQueryString("analyze_wildcard", analyze_wildcard);
		
		
		///<summary>The default operator for query string query (AND or OR)</summary>
		public UpdateByQueryRequestParameters DefaultOperator(DefaultOperator default_operator) => this.AddQueryString("default_operator", default_operator);
		
		
		///<summary>The field to use as default where no field prefix is given in the query string</summary>
		public UpdateByQueryRequestParameters Df(string df) => this.AddQueryString("df", df);
		
		
		///<summary>Starting offset (default: 0)</summary>
		public UpdateByQueryRequestParameters From(long from) => this.AddQueryString("from", from);
		
		
		///<summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
		public UpdateByQueryRequestParameters IgnoreUnavailable(bool ignore_unavailable) => this.AddQueryString("ignore_unavailable", ignore_unavailable);
		
		
		///<summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
		public UpdateByQueryRequestParameters AllowNoIndices(bool allow_no_indices) => this.AddQueryString("allow_no_indices", allow_no_indices);
		
		
		///<summary>What to do when the update by query hits version conflicts?</summary>
		public UpdateByQueryRequestParameters Conflicts(Conflicts conflicts) => this.AddQueryString("conflicts", conflicts);
		
		
		///<summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
		public UpdateByQueryRequestParameters ExpandWildcards(ExpandWildcards expand_wildcards) => this.AddQueryString("expand_wildcards", expand_wildcards);
		
		
		///<summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
		public UpdateByQueryRequestParameters Lenient(bool lenient) => this.AddQueryString("lenient", lenient);
		
		
		///<summary>Ingest pipeline to set on index requests made by this action. (default: none)</summary>
		public UpdateByQueryRequestParameters Pipeline(string pipeline) => this.AddQueryString("pipeline", pipeline);
		
		
		///<summary>Specify the node or shard the operation should be performed on (default: random)</summary>
		public UpdateByQueryRequestParameters Preference(string preference) => this.AddQueryString("preference", preference);
		
		
		///<summary>Query in the Lucene query string syntax</summary>
		public UpdateByQueryRequestParameters QueryOnQueryString(string query_on_query_string) => this.AddQueryString("q", query_on_query_string);
		
		
		///<summary>A comma-separated list of specific routing values</summary>
		public UpdateByQueryRequestParameters Routing(params string[] routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
		public UpdateByQueryRequestParameters Scroll(TimeSpan scroll) => this.AddQueryString("scroll", scroll.ToTimeUnit());
		
		
		///<summary>Search operation type</summary>
		public UpdateByQueryRequestParameters SearchType(SearchType search_type) => this.AddQueryString("search_type", search_type);
		
		
		///<summary>Explicit timeout for each search request. Defaults to no timeout.</summary>
		public UpdateByQueryRequestParameters SearchTimeout(TimeSpan search_timeout) => this.AddQueryString("search_timeout", search_timeout.ToTimeUnit());
		
		
		///<summary>Number of hits to return (default: 10)</summary>
		public UpdateByQueryRequestParameters Size(long size) => this.AddQueryString("size", size);
		
		
		///<summary>A comma-separated list of &lt;field&gt;:&lt;direction&gt; pairs</summary>
		public UpdateByQueryRequestParameters Sort(params string[] sort) => this.AddQueryString("sort", sort);
		
		
		///<summary>True or false to return the _source field or not, or a list of fields to return</summary>
		public UpdateByQueryRequestParameters SourceEnabled(params string[] source_enabled) => this.AddQueryString("_source", source_enabled);
		
		
		///<summary>A list of fields to exclude from the returned _source field</summary>
		public UpdateByQueryRequestParameters SourceExclude(params string[] source_exclude) => this.AddQueryString("_source_exclude", source_exclude);
		
		
		///<summary>A list of fields to extract and return from the _source field</summary>
		public UpdateByQueryRequestParameters SourceInclude(params string[] source_include) => this.AddQueryString("_source_include", source_include);
		
		
		///<summary>The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.</summary>
		public UpdateByQueryRequestParameters TerminateAfter(long terminate_after) => this.AddQueryString("terminate_after", terminate_after);
		
		
		///<summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
		public UpdateByQueryRequestParameters Stats(params string[] stats) => this.AddQueryString("stats", stats);
		
		
		///<summary>Specify whether to return document version as part of a hit</summary>
		public UpdateByQueryRequestParameters Version(bool version) => this.AddQueryString("version", version);
		
		
		///<summary>Should the document increment the version number (internal) on hit or not (reindex)</summary>
		public UpdateByQueryRequestParameters VersionType(bool version_type) => this.AddQueryString("version_type", version_type);
		
		
		///<summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
		public UpdateByQueryRequestParameters RequestCache(bool request_cache) => this.AddQueryString("request_cache", request_cache);
		
		
		///<summary>Should the effected indexes be refreshed?</summary>
		public UpdateByQueryRequestParameters Refresh(bool refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
		public UpdateByQueryRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Sets the number of shard copies that must be active before proceeding with the update by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
		public UpdateByQueryRequestParameters WaitForActiveShards(string wait_for_active_shards) => this.AddQueryString("wait_for_active_shards", wait_for_active_shards);
		
		
		///<summary>Size on the scroll request powering the update_by_query</summary>
		public UpdateByQueryRequestParameters ScrollSize(long scroll_size) => this.AddQueryString("scroll_size", scroll_size);
		
		
		///<summary>Should the request should block until the update by query operation is complete.</summary>
		public UpdateByQueryRequestParameters WaitForCompletion(bool wait_for_completion) => this.AddQueryString("wait_for_completion", wait_for_completion);
		
		
		///<summary>The throttle to set on this request in sub-requests per second. -1 means no throttle.</summary>
		public UpdateByQueryRequestParameters RequestsPerSecond(long requests_per_second) => this.AddQueryString("requests_per_second", requests_per_second);
		
		
		///<summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn&#39;t sliced into subtasks.</summary>
		public UpdateByQueryRequestParameters Slices(long slices) => this.AddQueryString("slices", slices);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public UpdateByQueryRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public UpdateByQueryRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public UpdateByQueryRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public UpdateByQueryRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public UpdateByQueryRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackGraphExplore
	///<pre>
	///https://www.elastic.co/guide/en/graph/current/explore.html
	///</pre>
	///</summary>
	public class GraphExploreRequestParameters : FluentRequestParameters<GraphExploreRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Specific routing value</summary>
		public GraphExploreRequestParameters Routing(string routing) => this.AddQueryString("routing", routing);
		
		
		///<summary>Explicit operation timeout</summary>
		public GraphExploreRequestParameters Timeout(TimeSpan timeout) => this.AddQueryString("timeout", timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GraphExploreRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GraphExploreRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GraphExploreRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GraphExploreRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GraphExploreRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackInfo
	///<pre>
	///https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html
	///</pre>
	///</summary>
	public class XPackInfoRequestParameters : FluentRequestParameters<XPackInfoRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Presents additional info for humans (feature descriptions and X-Pack tagline)</summary>
		public XPackInfoRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Comma-separated list of info categories. Can be any of: build, license, features</summary>
		public XPackInfoRequestParameters Categories(params string[] categories) => this.AddQueryString("categories", categories);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public XPackInfoRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public XPackInfoRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public XPackInfoRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public XPackInfoRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackUsage
	///<pre>
	///Retrieve information about xpack features usage
	///</pre>
	///</summary>
	public class XPackUsageRequestParameters : FluentRequestParameters<XPackUsageRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Specify timeout for watch write operation</summary>
		public XPackUsageRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public XPackUsageRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public XPackUsageRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public XPackUsageRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public XPackUsageRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public XPackUsageRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackLicenseDelete
	///<pre>
	///https://www.elastic.co/guide/en/shield/current/license-management.html
	///</pre>
	///</summary>
	public class DeleteLicenseRequestParameters : FluentRequestParameters<DeleteLicenseRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DeleteLicenseRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DeleteLicenseRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DeleteLicenseRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DeleteLicenseRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DeleteLicenseRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackLicenseGet
	///<pre>
	///https://www.elastic.co/guide/en/shield/current/license-management.html
	///</pre>
	///</summary>
	public class GetLicenseRequestParameters : FluentRequestParameters<GetLicenseRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Return local information, do not retrieve the state from master node (default: false)</summary>
		public GetLicenseRequestParameters Local(bool local) => this.AddQueryString("local", local);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetLicenseRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetLicenseRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetLicenseRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetLicenseRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetLicenseRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackLicensePost
	///<pre>
	///https://www.elastic.co/guide/en/shield/current/license-management.html
	///</pre>
	///</summary>
	public class PostLicenseRequestParameters : FluentRequestParameters<PostLicenseRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>whether the user has acknowledged acknowledge messages (default: false)</summary>
		public PostLicenseRequestParameters Acknowledge(bool acknowledge) => this.AddQueryString("acknowledge", acknowledge);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public PostLicenseRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public PostLicenseRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public PostLicenseRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public PostLicenseRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public PostLicenseRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackSecurityAuthenticate
	///<pre>
	///https://www.elastic.co/guide/en/x-pack/master/security-api-authenticate.html
	///</pre>
	///</summary>
	public class AuthenticateRequestParameters : FluentRequestParameters<AuthenticateRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public AuthenticateRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public AuthenticateRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public AuthenticateRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public AuthenticateRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public AuthenticateRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackSecurityChangePassword
	///<pre>
	///https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html
	///</pre>
	///</summary>
	public class ChangePasswordRequestParameters : FluentRequestParameters<ChangePasswordRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
		public ChangePasswordRequestParameters Refresh(Refresh refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ChangePasswordRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ChangePasswordRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ChangePasswordRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ChangePasswordRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ChangePasswordRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackSecurityClearCachedRealms
	///<pre>
	///https://www.elastic.co/guide/en/x-pack/current/security-api-clear-cache.html
	///</pre>
	///</summary>
	public class ClearCachedRealmsRequestParameters : FluentRequestParameters<ClearCachedRealmsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Comma-separated list of usernames to clear from the cache</summary>
		public ClearCachedRealmsRequestParameters Usernames(params string[] usernames) => this.AddQueryString("usernames", usernames);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ClearCachedRealmsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ClearCachedRealmsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ClearCachedRealmsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ClearCachedRealmsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ClearCachedRealmsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackSecurityClearCachedRoles
	///<pre>
	///https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-clear-role-cache
	///</pre>
	///</summary>
	public class ClearCachedRolesRequestParameters : FluentRequestParameters<ClearCachedRolesRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ClearCachedRolesRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ClearCachedRolesRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ClearCachedRolesRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ClearCachedRolesRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ClearCachedRolesRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackSecurityDeleteRole
	///<pre>
	///https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-delete-role
	///</pre>
	///</summary>
	public class DeleteRoleRequestParameters : FluentRequestParameters<DeleteRoleRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		
		///<summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
		public DeleteRoleRequestParameters Refresh(Refresh refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DeleteRoleRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DeleteRoleRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DeleteRoleRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DeleteRoleRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DeleteRoleRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackSecurityDeleteRoleMapping
	///<pre>
	///https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-delete-role-mapping
	///</pre>
	///</summary>
	public class DeleteRoleMappingRequestParameters : FluentRequestParameters<DeleteRoleMappingRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		
		///<summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
		public DeleteRoleMappingRequestParameters Refresh(Refresh refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DeleteRoleMappingRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DeleteRoleMappingRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DeleteRoleMappingRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DeleteRoleMappingRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DeleteRoleMappingRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackSecurityDeleteUser
	///<pre>
	///https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-delete-user
	///</pre>
	///</summary>
	public class DeleteUserRequestParameters : FluentRequestParameters<DeleteUserRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		
		///<summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
		public DeleteUserRequestParameters Refresh(Refresh refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DeleteUserRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DeleteUserRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DeleteUserRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DeleteUserRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DeleteUserRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackSecurityDisableUser
	///<pre>
	///https://www.elastic.co/guide/en/x-pack/master/security-api-disable-user.html
	///</pre>
	///</summary>
	public class DisableUserRequestParameters : FluentRequestParameters<DisableUserRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
		public DisableUserRequestParameters Refresh(Refresh refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DisableUserRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DisableUserRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DisableUserRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DisableUserRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DisableUserRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackSecurityEnableUser
	///<pre>
	///https://www.elastic.co/guide/en/x-pack/master/security-api-enable-user.html
	///</pre>
	///</summary>
	public class EnableUserRequestParameters : FluentRequestParameters<EnableUserRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
		public EnableUserRequestParameters Refresh(Refresh refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public EnableUserRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public EnableUserRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public EnableUserRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public EnableUserRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public EnableUserRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackSecurityGetRole
	///<pre>
	///https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-get-role
	///</pre>
	///</summary>
	public class GetRoleRequestParameters : FluentRequestParameters<GetRoleRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetRoleRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetRoleRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetRoleRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetRoleRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetRoleRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackSecurityGetRoleMapping
	///<pre>
	///https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-get-role-mapping
	///</pre>
	///</summary>
	public class GetRoleMappingRequestParameters : FluentRequestParameters<GetRoleMappingRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetRoleMappingRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetRoleMappingRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetRoleMappingRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetRoleMappingRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetRoleMappingRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackSecurityGetToken
	///<pre>
	///https://www.elastic.co/guide/en/x-pack/master/security-api-tokens.html#security-api-get-token
	///</pre>
	///</summary>
	public class GetUserAccessTokenRequestParameters : FluentRequestParameters<GetUserAccessTokenRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetUserAccessTokenRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetUserAccessTokenRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetUserAccessTokenRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetUserAccessTokenRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetUserAccessTokenRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackSecurityGetUser
	///<pre>
	///https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-get-user
	///</pre>
	///</summary>
	public class GetUserRequestParameters : FluentRequestParameters<GetUserRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetUserRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetUserRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetUserRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetUserRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetUserRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackSecurityInvalidateToken
	///<pre>
	///https://www.elastic.co/guide/en/x-pack/master/security-api-tokens.html#security-api-invalidate-token
	///</pre>
	///</summary>
	public class InvalidateUserAccessTokenRequestParameters : FluentRequestParameters<InvalidateUserAccessTokenRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public InvalidateUserAccessTokenRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public InvalidateUserAccessTokenRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public InvalidateUserAccessTokenRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public InvalidateUserAccessTokenRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public InvalidateUserAccessTokenRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackSecurityPutRole
	///<pre>
	///https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-put-role
	///</pre>
	///</summary>
	public class PutRoleRequestParameters : FluentRequestParameters<PutRoleRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
		public PutRoleRequestParameters Refresh(Refresh refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public PutRoleRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public PutRoleRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public PutRoleRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public PutRoleRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public PutRoleRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackSecurityPutRoleMapping
	///<pre>
	///https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-put-role-mapping
	///</pre>
	///</summary>
	public class PutRoleMappingRequestParameters : FluentRequestParameters<PutRoleMappingRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
		public PutRoleMappingRequestParameters Refresh(Refresh refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public PutRoleMappingRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public PutRoleMappingRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public PutRoleMappingRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public PutRoleMappingRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public PutRoleMappingRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackSecurityPutUser
	///<pre>
	///https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-put-user
	///</pre>
	///</summary>
	public class PutUserRequestParameters : FluentRequestParameters<PutUserRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
		public PutUserRequestParameters Refresh(Refresh refresh) => this.AddQueryString("refresh", refresh);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public PutUserRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public PutUserRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public PutUserRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public PutUserRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public PutUserRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackWatcherAckWatch
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html
	///</pre>
	///</summary>
	public class AcknowledgeWatchRequestParameters : FluentRequestParameters<AcknowledgeWatchRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public AcknowledgeWatchRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public AcknowledgeWatchRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public AcknowledgeWatchRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public AcknowledgeWatchRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public AcknowledgeWatchRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public AcknowledgeWatchRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackWatcherActivateWatch
	///<pre>
	///https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html
	///</pre>
	///</summary>
	public class ActivateWatchRequestParameters : FluentRequestParameters<ActivateWatchRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public ActivateWatchRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ActivateWatchRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ActivateWatchRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ActivateWatchRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ActivateWatchRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ActivateWatchRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackWatcherDeactivateWatch
	///<pre>
	///https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html
	///</pre>
	///</summary>
	public class DeactivateWatchRequestParameters : FluentRequestParameters<DeactivateWatchRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public DeactivateWatchRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DeactivateWatchRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DeactivateWatchRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DeactivateWatchRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DeactivateWatchRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DeactivateWatchRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackWatcherDeleteWatch
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html
	///</pre>
	///</summary>
	public class DeleteWatchRequestParameters : FluentRequestParameters<DeleteWatchRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.DELETE;
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public DeleteWatchRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public DeleteWatchRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public DeleteWatchRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public DeleteWatchRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public DeleteWatchRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public DeleteWatchRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackWatcherExecuteWatch
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html
	///</pre>
	///</summary>
	public class ExecuteWatchRequestParameters : FluentRequestParameters<ExecuteWatchRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>indicates whether the watch should execute in debug mode</summary>
		public ExecuteWatchRequestParameters Debug(bool debug) => this.AddQueryString("debug", debug);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public ExecuteWatchRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public ExecuteWatchRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public ExecuteWatchRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public ExecuteWatchRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public ExecuteWatchRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackWatcherGetWatch
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html
	///</pre>
	///</summary>
	public class GetWatchRequestParameters : FluentRequestParameters<GetWatchRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public GetWatchRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public GetWatchRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public GetWatchRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public GetWatchRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public GetWatchRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackWatcherPutWatch
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html
	///</pre>
	///</summary>
	public class PutWatchRequestParameters : FluentRequestParameters<PutWatchRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.PUT;
		
		///<summary>Explicit operation timeout for connection to master node</summary>
		public PutWatchRequestParameters MasterTimeout(TimeSpan master_timeout) => this.AddQueryString("master_timeout", master_timeout.ToTimeUnit());
		
		
		///<summary>Specify whether the watch is in/active by default</summary>
		public PutWatchRequestParameters Active(bool active) => this.AddQueryString("active", active);
		
		
		///<summary>Pretty format the returned JSON response.</summary>
		public PutWatchRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public PutWatchRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public PutWatchRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public PutWatchRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public PutWatchRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackWatcherRestart
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-restart.html
	///</pre>
	///</summary>
	public class RestartWatcherRequestParameters : FluentRequestParameters<RestartWatcherRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public RestartWatcherRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public RestartWatcherRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public RestartWatcherRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public RestartWatcherRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public RestartWatcherRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackWatcherStart
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html
	///</pre>
	///</summary>
	public class StartWatcherRequestParameters : FluentRequestParameters<StartWatcherRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public StartWatcherRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public StartWatcherRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public StartWatcherRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public StartWatcherRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public StartWatcherRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackWatcherStats
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html
	///</pre>
	///</summary>
	public class WatcherStatsRequestParameters : FluentRequestParameters<WatcherStatsRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.GET;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public WatcherStatsRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public WatcherStatsRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public WatcherStatsRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public WatcherStatsRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public WatcherStatsRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
	
	///<summary>Request parameters descriptor for XpackWatcherStop
	///<pre>
	///http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html
	///</pre>
	///</summary>
	public class StopWatcherRequestParameters : FluentRequestParameters<StopWatcherRequestParameters> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.POST;
		
		///<summary>Pretty format the returned JSON response.</summary>
		public StopWatcherRequestParameters Pretty(bool pretty) => this.AddQueryString("pretty", pretty);
		
		
		///<summary>Return human readable values for statistics.</summary>
		public StopWatcherRequestParameters Human(bool human) => this.AddQueryString("human", human);
		
		
		///<summary>Include the stack trace of returned errors.</summary>
		public StopWatcherRequestParameters ErrorTrace(bool error_trace) => this.AddQueryString("error_trace", error_trace);
		
		
		///<summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
		public StopWatcherRequestParameters Source(string source) => this.AddQueryString("source", source);
		
		
		///<summary>A comma-separated list of filters used to reduce the respone.</summary>
		public StopWatcherRequestParameters FilterPath(params string[] filter_path) => this.AddQueryString("filter_path", filter_path);
		
	}
}