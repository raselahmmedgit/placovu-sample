@using System.Collections.Generic
@using ApiGenerator.Domain
@using ApiGenerator

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Linq.Expressions;

//This file contains all the typed querystring parameters that are generated of the client spec.
//This file is automatically generated from https://github.com/elastic/elasticsearch/tree/@Model.Commit/rest-api-spec
//Generated from commit @Model.Commit

namespace Elasticsearch.Net
{
	@foreach (CsharpMethod method in Model.CsharpMethodsWithQueryStringInfo)
	{
	<text>
	///<summary>Request parameters descriptor for @method.FullName
	///<pre>
	///@method.Documentation
	///</pre>
	///</summary>
	public class @method.QueryStringParamName : FluentRequestParameters<@method.QueryStringParamName> 
	{
		public override HttpMethod DefaultHttpMethod => HttpMethod.@method.HttpMethod;
	  @foreach (KeyValuePair<string, ApiQueryParameters> kv in method.Url.Params)
      {
          var mm = kv.Key;
          var fieldType = kv.Value.CsharpType(kv.Key).Replace("params", "");
          var setter = mm;
          var isFields = (mm.Contains("fields") || mm.Contains("source_include") || mm.Contains("source_exclude"));
          if (isFields && fieldType.Contains("string"))
          {
              fieldType = "IEnumerable<object>";
          }
          else if (mm.Contains("field") && fieldType.Contains("string"))
          {
              fieldType = "object";
          }
          if (fieldType == "TimeSpan")
          {
			  setter = mm + ".ToTimeUnit()";
          }
		<text>
		///<summary>@kv.Value.Description</summary>
		@if (!string.IsNullOrWhiteSpace(kv.Value.Obsolete))
		{<text>		[Obsolete("Scheduled to be removed in 7.0, @kv.Value.Obsolete")]
</text>}
		@Raw(kv.Value.FluentGenerator.Invoke(method.QueryStringParamName, mm, kv.Value.OriginalQueryStringParamName, setter))
		</text>
	  }
	}</text>
	}
}